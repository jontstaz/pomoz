(()=>{"use strict";var e={d:(t,o)=>{for(var r in o)e.o(o,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:o[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{gz:()=>Se,sS:()=>De,rC:()=>he,DH:()=>Ie,HT:()=>Ce,m1:()=>Ae,jW:()=>Be,_:()=>Le,g1:()=>qe,E5:()=>pe});const t=document.querySelector(".flexMain"),o=document.querySelector(".pause"),r=document.querySelector(".start"),l=document.querySelector(".reset"),n=document.querySelector(".themeToggle_btn"),s=document.querySelector("body"),c=document.querySelector(".squareBox"),a=document.querySelector(".sessionBtns"),d=document.querySelector(".settingsBtn"),u=document.querySelector(".settingsPage"),i=document.querySelector(".defaultDark"),y=document.querySelector(".defaultLight"),m=document.querySelector(".brandLogo"),g=(document.querySelector(".aboutPage"),document.querySelector(".menulink-toggle")),f=document.querySelector(".modesLink"),E=document.querySelector(".modesDiv"),k=document.querySelector(".modeCurrentTime"),b=document.querySelector(".increaseTimeArrow"),v=document.querySelector(".decreaseTimeArrow"),h=document.querySelector(".breakMode"),C=document.querySelector(".defaultMode"),S=document.querySelector(".automaticMode"),p=document.querySelector(".timerModes"),q=document.querySelector(".modeSettings"),L=document.querySelector(".increaseTimeChevron"),A=document.querySelector(".saveBtnFLex");document.querySelector(".timerSoundsDiv"),firebase.initializeApp({apiKey:"AIzaSyAk8kebOX8MDqtYYyy7sAdd4fsZa4R8M0s",authDomain:"pomoreward.firebaseapp.com",projectId:"pomoreward",storageBucket:"pomoreward.appspot.com",messagingSenderId:"319256565665",appId:"1:319256565665:web:62d73e7fb1a493d51d5de0"});const D=firebase.auth(),x=e=>{let t=document.querySelector(".userAvatar_Div"),o=document.querySelector(".email_InputDiv"),r=document.querySelector(".pass_InputDiv");"show"==e?(o.style.display="none",r.style.display="none",t.style.display="flex"):(t.style.display="none",o.style.display="flex",r.style.display="flex")};let I=document.getElementById("signUpBtn"),B=document.getElementById("signInBtn"),w=document.getElementById("signOutBtn"),_=document.querySelector(".authDiv_Header");const F=e=>{let t="";for(let o=0;o<e.length&&"@"!=e[o];o++)t+=e[o];return t};D.onAuthStateChanged((function(e){if(e){let t=e.email;_.innerText=F(t),B.style.display="none",I.style.display="none",x("show")}else x("hide"),_.innerText="Account",B.style.display="flex",I.style.display="flex"})),I.addEventListener("click",(()=>{(()=>{let e=document.getElementById("userEmail"),t=document.getElementById("userPassword");D.createUserWithEmailAndPassword(e.value,t.value).catch((e=>alert(e.message)))})()})),B.addEventListener("click",(()=>{(()=>{let e=document.getElementById("userEmail"),t=document.getElementById("userPassword");D.signInWithEmailAndPassword(e.value,t.value).catch((e=>alert(e.message)))})()})),w.addEventListener("click",(()=>{(()=>{D.signOut();let e=document.getElementById("userEmail"),t=document.getElementById("userPassword");e.value="",t.value="",location.reload()})()}));let $=document.querySelector(".userStatus"),M=document.querySelector(".auth_Div");const P=document.querySelector(".settingsPage"),T=document.querySelector(".modesDiv"),O=document.querySelector(".reset"),z=document.querySelector(".squareBox"),j=document.querySelector(".sessionBtns"),H=document.querySelector(".flexMain");$.addEventListener("click",(()=>{[P,z,j,O,H,T].forEach((e=>{e.style.display="none"})),M.style.display="flex"}));const U=()=>{D.onAuthStateChanged((function(e){if(e){let t=F(e.email);firebase.database().ref(`users/${t}`).set({theme:`${pe}`,sound:`${qe}`})}}))};let W=document.querySelector(".sound_Settings");const R=e=>{let t=document.createElement("p");t.classList.add("timer_audio"),t.textContent=e,W.appendChild(t)},Y=["cocGame","siren","yooo","pikachuu","angryBird","gnuReload","piano","vasco_shot","pizzaro","white_beard"];(()=>{for(let e=0;e<Y.length;e++)R(Y[e])})();let G=document.querySelectorAll(".timer_audio");G.forEach((e=>{e.addEventListener("mouseover",(()=>{e.style.backgroundColor="#545E6A",e.style.cursor="pointer",e.style.color="white"})),e.addEventListener("mouseout",(()=>{e.style.backgroundColor="#fafafa",e.style.cursor="default",e.style.color="#545E6A"})),e.addEventListener("click",(()=>{for(let e=0;e<Y.length;e++)G[e].style.border="none",G[e].style.color="#82868E",G[e].style.textDecoration="line-through";e.style.textDecoration="none",e.style.color="#545E6A",e.style.border="5px dotted #545E6A",e.style.backgroundColor="pink",qe=e.innerText,U(),document.querySelector("#dingding").setAttribute("src",`./assets/sounds/${qe}.mp3`),de()}))}));let K=0;const N=e=>{pe=e,ge(),U()},V=(e,t)=>{s.style.backgroundColor=t,s.style.color=e},X=(e,t)=>{let o=document.querySelector(".current_Mode");o.style.color=e,o.style.backgroundColor=t},Z=(e,t)=>{c.style.backgroundColor=e,c.style.borderColor=t},J=(e,t,o)=>{let r=document.querySelector(".innerC"),l=document.querySelector(".outerC"),n=document.querySelector("svg");l.style.stroke=e,r.style.stroke=t,n.style.fill=o},Q=(e,t)=>{a.style.backgroundColor=e,a.style.borderColor=t},ee=(e,t,l)=>{[r,o].forEach((o=>{o.style.backgroundColor=t,o.style.color=e,o.addEventListener("mouseover",(()=>{o.style.backgroundColor=l,o.style.color=t})),o.addEventListener("mouseout",(()=>{o.style.backgroundColor=t,o.style.color=e}))}))},te=(e,t,o)=>{l.style.backgroundColor=t,l.style.color=e,l.addEventListener("mouseover",(()=>{l.style.backgroundColor=o})),l.addEventListener("mouseout",(()=>{l.style.backgroundColor=t}))},oe=(e,t,o,r,l,n)=>{p.style.backgroundColor=t,[C,h,S].forEach((o=>{o.style.color=e,o.style.backgroundColor=t,o.addEventListener("click",(()=>{}))})),C.addEventListener("click",(()=>{[h,S].forEach((e=>{e.style.backgroundColor=t})),C.style.backgroundColor=o})),h.addEventListener("click",(()=>{[C,S].forEach((e=>{e.style.backgroundColor=t})),h.style.backgroundColor=o})),S.addEventListener("click",(()=>{[C,h].forEach((e=>{e.style.backgroundColor=t})),S.style.backgroundColor=o})),q.style.backgroundColor=r,k.style.color=l,k.style.backgroundColor=n,[b,v,L].forEach((e=>{e.style.backgroundColor=n,e.style.color=l,e!=L&&(e.addEventListener("mouseover",(()=>{e.style.backgroundColor=l,e.style.color=n})),e.addEventListener("mouseout",(()=>{e.style.backgroundColor=n,e.style.color=l})))})),C.style.backgroundColor=o,A.style.backgroundColor=t,A.style.color=e,A.addEventListener("mouseover",(()=>{A.style.backgroundColor=o,A.style.color=e})),A.addEventListener("mouseout",(()=>{A.style.backgroundColor=t,A.style.color=e}))},re=(e,t)=>{let o=document.querySelector(".settingsbtn");o.style.color=e,o.style.backgroundColor=t},le=(e,t,o,r,l)=>{let n=document.querySelector(".sound_Settings");n.style.backgroundColor=l,n.style.color=o;let s=document.querySelectorAll(".timer_audio");s.forEach((l=>{l.style.backgroundColor=r,l.addEventListener("mouseover",(()=>{l.style.backgroundColor=t,l.style.color=e})),l.addEventListener("mouseout",(()=>{l.style.backgroundColor=r,l.style.color=o})),l.addEventListener("click",(()=>{for(let e=0;e<Y.length;e++)s[e].style.color=o,s[e].style.textDecoration="line-through",s[e].style.backgroundColor=r,s[e].style.border="none";l.style.textDecoration="none",l.style.backgroundColor="red",l.style.color="blue"}))}))},ne=(e,t,o,r,l,n)=>{document.querySelector(".auth_Div").style.backgroundColor=e;let s=document.querySelector(".ph-key"),c=document.querySelector(".ph-at"),a=document.querySelector("#userEmail"),d=document.querySelector("#userPassword"),u=document.querySelector(".userAvatar_Div");[s,c,a,d,u].forEach((e=>{e.style.backgroundColor=t,e!=a&&e!=d||(e.style.color=o)}));let i=document.querySelector("#signUpBtn"),y=document.querySelector("#signInBtn"),m=document.querySelector("#signOutBtn");[i,y].forEach((e=>{e.style.backgroundColor=t,e.style.color=r})),m.style.backgroundColor=n,m.style.color=l},se=()=>{N("light"),V("#545E6A","#ffffff"),Z("#ffffff","#f6f6f6"),X("#527f6b","#caf7e3"),Q("#ffffff","#f6f6f6"),ee("#668aa4","#C0E4FE","#668aa4"),te("#FD8A89","#FFD9D8","#545E6A"),re("white","#545E6A"),oe("#ffffff","#545E6A","#4a5460","#C0E4FE","#545E6A","#ffffff"),J("#f0f0f0","#C0E4FE","#545e6a"),le("#545e6a","#ffffff","#545e6a","#8deeb9","#8deeb9"),ne("#CAEEFF","white","#545e6a","#545e6a","white","#545e6a")},ce=()=>{N("dark"),V("#a4aeba","#1E222A"),Z("#23272f","#23272f"),X("#878b93","#2d3139"),Q("#2a2e36","#2a2e36"),ee("#D08770","#1E222A","#D08770"),Q("#2a2e36","#2a2e36"),ee("#D08770","#1E222A","#D08770"),te("#23272f","#D08770","#8deeb9"),re("#8deeb9","#23272f"),oe("#a4aeba","#2C323B","#4a5460","#40464F","#81A1C1","#2C323B"),J("#1E222A","#81A1C1","#81A1C1"),le("#FF6E67","#1E222A","#787C84","#2a2e36","#2a2e36","#1E222A"),ne("#23272F","#2D3139","#C3C7CF","#C3C7CF","#FF6E67","#2D3139")};y.addEventListener("click",se),i.addEventListener("click",ce);let ae=document.querySelector(".timerText");const de=()=>{U();let e=document.querySelector("#dingding");e.setAttribute("src",`./assets/sounds/${qe}.mp3`),e.play()},ue=(e,t)=>{let o;e<10?o=`0${e} : ${t}`:t<10&&(o=`${e} : 0${t}`),o=`${e} : ${t}`,ae.textContent=o},ie=()=>{ae.style.backgroundImage="url('https://media1.tenor.com/images/5fe35bec1c80a880bf59ae32a9716ace/tenor.gif?itemid=8953038')",ae.textContent=">:("},ye=e=>{k.textContent=e<10?`0${e} : 00`:`${e} : 00`},me=()=>{let e=(Ae-De/60)/Ae*100,t=document.querySelector(".innerC"),o=2*t.r.baseVal.value*Math.PI;t.style.strokeDasharray=o,t.style.strokeDashoffset=o-e/100*o},ge=()=>{localStorage.setItem("savedTheme",pe)};let fe=document.querySelector(".auth_Div");[r,l].forEach((e=>{e.addEventListener("click",(()=>(ae.style.animation=" none",ae.style.backgroundImage="none","reset"===e.className?(Se="reset",clearInterval(Ce),De=60*Ae,ue(Ae,0),void me()):(Se="start",new Audio("./assets/sounds/tick.mp3").play(),clearInterval(Ce),void Ie()))))}));let Ee=0;o.addEventListener("click",(()=>{Ee++,Se=Ee%2==0?"resume":"pause","pause"==Se?(()=>{De!==60*Ae&&0!==De||ie(),Se="pause",he=De,clearInterval(Ce);const e=Math.floor(he/60);ue(e,he%60)})():(De!==60*Ae&&0!==De||ie(),Se="pause",De!=60*Ae&&Ie())})),d.addEventListener("mouseover",(()=>d.style.textDecoration="underline")),d.addEventListener("mouseout",(()=>d.style.textDecoration="none")),d.addEventListener("click",(()=>{[c,a,l,E,t,fe].forEach((e=>e.style.display="none")),u.style.display="flex"}));const ke=()=>{[c,a,l,t].forEach((e=>{e.style.display=""})),[u,E,fe].forEach((e=>e.style.display="none"))};m.addEventListener("click",(()=>ke())),f.addEventListener("click",(()=>([u,c,a,l,t,fe].forEach((e=>{e.style.display="none"})),void(E.style.display="block")))),b.addEventListener("click",(()=>{Ae++,ye(Ae),ue(Ae,0)})),v.addEventListener("click",(()=>{Ae>1&&(Ae--,ye(Ae),ue(Ae,0))})),C.addEventListener("click",(()=>{[h,S].forEach((e=>{e.style.backgroundColor="#36404c"})),Ae=25,ye(Ae),C.style.backgroundColor="#4a5460",Le="default",Be()})),h.addEventListener("click",(()=>{[C,S].forEach((e=>{e.style.backgroundColor="#36404c"})),Ae=5,ye(Ae),h.style.backgroundColor="#4a5460",Le="break",Be()})),S.addEventListener("click",(()=>{[h,C].forEach((e=>{e.style.backgroundColor="#36404c"})),Ae=25,ye(Ae),S.style.backgroundColor="#4a5460",Le="automatic",alert("in progress!"),Be()})),A.addEventListener("click",(()=>ke()));let be=document.querySelector(".navBarLinks");g.addEventListener("click",(()=>be.classList.toggle("show")));const ve=(e,t,o)=>{const r=document.querySelector("."+e);r.setAttribute("title",t);const l=document.createElement("i");l.classList.add("fas",o,"fa-lg"),r.appendChild(l)};let he,Ce,Se,pe="light",qe="pikachuu",Le="default";pe=localStorage.getItem("savedTheme"),"light"==pe?se():ce(),D.onAuthStateChanged((function(e){if(e){let t=F(e.email);firebase.database().ref("users").child(t).on("value",(function(e){e.val().theme&&(pe=e.val().theme,"light"==pe?se():ce()),e.val().sound&&(qe=e.val().sound)}))}})),ve("start","start","fa-play"),ve("reset","reset","fa-redo"),ve("pause","pause","fa-stop");let Ae=25,De=60*Ae;const xe=()=>{0==De&&(clearInterval(Ce),de());const e=Math.floor(De/60),t=De%60;0!==De?(ue(e,t),De--,me()):ue(e,t)},Ie=()=>{null!=Se&&(De="pause"==Se?he:60*Ae),Ce=setInterval(xe,1e3)};n.addEventListener("click",(()=>{n.classList.toggle("ph-toggle-right"),K++,K%2!=0?ce():se()}));const Be=()=>{document.querySelector(".current_Mode").textContent=`${Le} mode`};Be()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,