(()=>{"use strict";var e={717:(e,t,o)=>{o.d(t,{gz:()=>Le,sS:()=>Be,rC:()=>pe,DH:()=>we,HT:()=>qe,m1:()=>De,jW:()=>_e,g1:()=>xe,E5:()=>Ae});const r=document.querySelector(".flexMain"),l=document.querySelector(".pause"),n=document.querySelector(".start"),s=document.querySelector(".reset"),c=document.querySelector(".themeToggle_btn"),a=document.querySelector("body"),d=document.querySelector(".squareBox"),u=document.querySelector(".sessionBtns"),i=document.querySelector(".settingsBtn"),y=document.querySelector(".settingsPage"),m=document.querySelector(".defaultDark"),g=document.querySelector(".defaultLight"),f=document.querySelector(".brandLogo"),E=(document.querySelector(".aboutPage"),document.querySelector(".menulink-toggle")),b=document.querySelector(".modesLink"),k=document.querySelector(".modesDiv"),v=document.querySelector(".modeCurrentTime"),C=document.querySelector(".increaseTimeArrow"),h=document.querySelector(".decreaseTimeArrow"),S=document.querySelector(".breakMode"),p=document.querySelector(".defaultMode"),q=document.querySelector(".automaticMode"),L=document.querySelector(".timerModes"),A=document.querySelector(".modeSettings"),x=document.querySelector(".increaseTimeChevron"),D=document.querySelector(".saveBtnFLex");document.querySelector(".timerSoundsDiv");let B=0;const I=e=>{Ae=e,se()},w=(e,t)=>{a.style.backgroundColor=t,a.style.color=e},_=(e,t)=>{let o=document.querySelector(".current_Mode");o.style.color=e,o.style.backgroundColor=t},F=(e,t)=>{d.style.backgroundColor=e,d.style.borderColor=t},M=(e,t,o)=>{let r=document.querySelector(".innerC"),l=document.querySelector(".outerC"),n=document.querySelector("svg");l.style.stroke=e,r.style.stroke=t,n.style.fill=o},$=(e,t)=>{u.style.backgroundColor=e,u.style.borderColor=t},P=(e,t,o)=>{[n,l].forEach((r=>{r.style.backgroundColor=t,r.style.color=e,r.addEventListener("mouseover",(()=>{r.style.backgroundColor=o,r.style.color=t})),r.addEventListener("mouseout",(()=>{r.style.backgroundColor=t,r.style.color=e}))}))},T=(e,t,o)=>{s.style.backgroundColor=t,s.style.color=e,s.addEventListener("mouseover",(()=>{s.style.backgroundColor=o})),s.addEventListener("mouseout",(()=>{s.style.backgroundColor=t}))},O=(e,t,o,r,l,n)=>{L.style.backgroundColor=t,[p,S,q].forEach((o=>{o.style.color=e,o.style.backgroundColor=t,o.addEventListener("click",(()=>{}))})),p.addEventListener("click",(()=>{[S,q].forEach((e=>{e.style.backgroundColor=t})),p.style.backgroundColor=o})),S.addEventListener("click",(()=>{[p,q].forEach((e=>{e.style.backgroundColor=t})),S.style.backgroundColor=o})),q.addEventListener("click",(()=>{[p,S].forEach((e=>{e.style.backgroundColor=t})),q.style.backgroundColor=o})),A.style.backgroundColor=r,v.style.color=l,v.style.backgroundColor=n,[C,h,x].forEach((e=>{e.style.backgroundColor=n,e.style.color=l,e!=x&&(e.addEventListener("mouseover",(()=>{e.style.backgroundColor=l,e.style.color=n})),e.addEventListener("mouseout",(()=>{e.style.backgroundColor=n,e.style.color=l})))})),p.style.backgroundColor=o,D.style.backgroundColor=t,D.style.color=e,D.addEventListener("mouseover",(()=>{D.style.backgroundColor=o,D.style.color=e})),D.addEventListener("mouseout",(()=>{D.style.backgroundColor=t,D.style.color=e}))},j=(e,t)=>{document.querySelectorAll("li").forEach((t=>{t.style.color=e})),document.querySelectorAll("h2").forEach((e=>{e.style.color=t,e.style.borderColor=t}))},z=(e,t)=>{let o=document.querySelector(".settingsbtn");o.style.color=e,o.style.backgroundColor=t},G=(e,t,o,r,l)=>{let n=document.querySelector(".sound_Settings");n.style.backgroundColor=l,n.style.color=o;let s=document.querySelectorAll(".timer_audio");s.forEach((l=>{l.style.backgroundColor=r,l.addEventListener("mouseover",(()=>{l.style.backgroundColor=t,l.style.color=e})),l.addEventListener("mouseout",(()=>{l.style.backgroundColor=r,l.style.color=o})),l.addEventListener("click",(()=>{for(let e=0;e<de.length;e++)s[e].style.color=o,s[e].style.textDecoration="line-through",s[e].style.backgroundColor=r,s[e].style.border="none";l.style.textDecoration="none",l.style.backgroundColor="red",l.style.color="blue"}))}))},H=(e,t,o,r,l,n)=>{document.querySelector(".auth_Div").style.backgroundColor=e;let s=document.querySelector(".ph-key"),c=document.querySelector(".ph-at"),a=document.querySelector("#userEmail"),d=document.querySelector("#userPassword"),u=document.querySelector(".userAvatar_Div");[s,c,a,d,u].forEach((e=>{e.style.backgroundColor=t,e!=a&&e!=d||(e.style.color=o)}));let i=document.querySelector("#signUpBtn"),y=document.querySelector("#signInBtn"),m=document.querySelector("#signOutBtn");[i,y].forEach((e=>{e.style.backgroundColor=t,e.style.color=r})),m.style.backgroundColor=n,m.style.color=l},R=()=>{I("light"),w("#545E6A","#ffffff"),F("#ffffff","#f6f6f6"),_("#527f6b","#caf7e3"),$("#ffffff","#f6f6f6"),P("#668aa4","#C0E4FE","#668aa4"),T("#FD8A89","#FFD9D8","#545E6A"),z("white","#545E6A"),O("#ffffff","#545E6A","#4a5460","#C0E4FE","#545E6A","#ffffff"),j("#545e6a","#545e6a"),M("#f0f0f0","#C0E4FE","#545e6a"),G("#545e6a","#ffffff","#545e6a","#8deeb9","#8deeb9"),H("#CAEEFF","white","#545e6a","#545e6a","white","#545e6a"),be()},U=()=>{I("dark"),w("#a4aeba","#1E222A"),F("#23272f","#23272f"),_("#878b93","#2d3139"),$("#2a2e36","#2a2e36"),P("#D08770","#1E222A","#D08770"),$("#2a2e36","#2a2e36"),P("#D08770","#1E222A","#D08770"),T("#23272f","#D08770","#8deeb9"),z("#8deeb9","#23272f"),O("#a4aeba","#2C323B","#4a5460","#40464F","#81A1C1","#2C323B"),j("#C3C7CF","#AAAEB6"),M("#1E222A","#81A1C1","#81A1C1"),G("#FF6E67","#1E222A","#787C84","#2a2e36","#2a2e36","#1E222A"),H("#23272F","#2D3139","#C3C7CF","#C3C7CF","#FF6E67","#2D3139"),be()};g.addEventListener("click",R),m.addEventListener("click",U),firebase.initializeApp({apiKey:"AIzaSyAk8kebOX8MDqtYYyy7sAdd4fsZa4R8M0s",authDomain:"pomoreward.firebaseapp.com",projectId:"pomoreward",storageBucket:"pomoreward.appspot.com",messagingSenderId:"319256565665",appId:"1:319256565665:web:62d73e7fb1a493d51d5de0"});const W=firebase.auth(),Y=e=>{let t=document.querySelector(".userAvatar_Div"),o=document.querySelector(".email_InputDiv"),r=document.querySelector(".pass_InputDiv");"show"==e?(o.style.display="none",r.style.display="none",t.style.display="flex"):(t.style.display="none",o.style.display="flex",r.style.display="flex")};let K=document.getElementById("signUpBtn"),N=document.getElementById("signInBtn"),V=document.getElementById("signOutBtn"),X=document.querySelector(".authDiv_Header");const Z=e=>{let t="";for(let o=0;o<e.length&&"@"!=e[o];o++)t+=e[o];return t};W.onAuthStateChanged((function(e){if(e){let t=e.email;X.innerText=Z(t),N.style.display="none",K.style.display="none",Y("show")}else Y("hide"),X.innerText="Account",N.style.display="flex",K.style.display="flex"})),K.addEventListener("click",(()=>{(()=>{let e=document.getElementById("userEmail"),t=document.getElementById("userPassword");W.createUserWithEmailAndPassword(e.value,t.value).catch((e=>alert(e.message)))})()})),N.addEventListener("click",(()=>{(()=>{let e=document.getElementById("userEmail"),t=document.getElementById("userPassword");W.signInWithEmailAndPassword(e.value,t.value).catch((e=>alert(e.message)))})()})),V.addEventListener("click",(()=>{(()=>{W.signOut();let e=document.getElementById("userEmail"),t=document.getElementById("userPassword");e.value="",t.value="",location.reload()})(),showRemaining_Gems(0)}));let J=document.querySelector(".userStatus"),Q=document.querySelector(".auth_Div");const ee=document.querySelector(".settingsPage"),te=document.querySelector(".modesDiv"),oe=document.querySelector(".reset"),re=document.querySelector(".squareBox"),le=document.querySelector(".sessionBtns"),ne=document.querySelector(".flexMain");J.addEventListener("click",(()=>{[ee,re,le,oe,ne,te].forEach((e=>{e.style.display="none"})),Q.style.display="flex"}));const se=()=>{W.onAuthStateChanged((function(e){if(e){let t=Z(e.email);firebase.database().ref(`users/${t}`).set({theme:`${Ae}`,sound:`${xe}`})}}))};let ce=document.querySelector(".sound_Settings");const ae=e=>{let t=document.createElement("p");t.classList.add("timer_audio"),t.textContent=e,ce.appendChild(t)},de=["cocGame","siren","yooo","pikachuu","angryBird","gnuReload","piano","vasco_shot","pizzaro","white_beard"];(()=>{for(let e=0;e<de.length;e++)ae(de[e])})();let ue=document.querySelectorAll(".timer_audio");ue.forEach((e=>{e.addEventListener("mouseover",(()=>{e.style.backgroundColor="#545E6A",e.style.cursor="pointer",e.style.color="white"})),e.addEventListener("mouseout",(()=>{e.style.backgroundColor="#fafafa",e.style.cursor="default",e.style.color="#545E6A"})),e.addEventListener("click",(()=>{for(let e=0;e<de.length;e++)ue[e].style.border="none",ue[e].style.color="#82868E",ue[e].style.textDecoration="line-through";e.style.textDecoration="none",e.style.color="#545E6A",e.style.border="5px dotted #545E6A",e.style.backgroundColor="pink",xe=e.innerText,se(),document.querySelector("#dingding").setAttribute("src",`./assets/sounds/${xe}.mp3`),ye()}))}));let ie=document.querySelector(".timerText");const ye=()=>{se();let e=document.querySelector("#dingding");e.setAttribute("src",`./assets/sounds/${xe}.mp3`),e.play()},me=(e,t)=>{let o;e<10?o=`0${e} : ${t}`:t<10&&(o=`${e} : 0${t}`),o=`${e} : ${t}`,ie.textContent=o},ge=()=>{ie.style.backgroundImage="url('https://media1.tenor.com/images/5fe35bec1c80a880bf59ae32a9716ace/tenor.gif?itemid=8953038')",ie.textContent=">:("},fe=e=>{v.textContent=e<10?`0${e} : 00`:`${e} : 00`},Ee=()=>{let e=(De-Be/60)/De*100,t=document.querySelector(".innerC"),o=2*t.r.baseVal.value*Math.PI;t.style.strokeDasharray=o,t.style.strokeDashoffset=o-e/100*o};const be=()=>{let e="#"+document.querySelector("body").style.backgroundColor.match(/\d+/g).map((e=>(+e).toString(16).padStart(2,0))).join``;var t;document.querySelector(".aboutCaption").style.backgroundColor=(t="light"!=Ae?10:-7,"#"+e.replace(/^#/,"").replace(/../g,(e=>("0"+Math.min(255,Math.max(0,parseInt(e,16)+t)).toString(16)).substr(-2))))};let ke=document.querySelector(".auth_Div");[n,s].forEach((e=>{e.addEventListener("click",(()=>(ie.style.animation=" none",ie.style.backgroundImage="none","reset"===e.className?(Le="reset",clearInterval(qe),Be=60*De,me(De,0),void Ee()):(Le="start",new Audio("./assets/sounds/tick.mp3").play(),clearInterval(qe),void we()))))}));let ve=0;l.addEventListener("click",(()=>{ve++,Le=ve%2==0?"resume":"pause","pause"==Le?(()=>{Be!==60*De&&0!==Be||ge(),Le="pause",pe=Be,clearInterval(qe);const e=Math.floor(pe/60);me(e,pe%60)})():(Be!==60*De&&0!==Be||ge(),Le="pause",Be!=60*De&&we())})),i.addEventListener("mouseover",(()=>i.style.textDecoration="underline")),i.addEventListener("mouseout",(()=>i.style.textDecoration="none")),i.addEventListener("click",(()=>{[d,u,s,k,r,ke].forEach((e=>e.style.display="none")),y.style.display="flex",clear_Gallery()}));const Ce=()=>{[d,u,s,r].forEach((e=>{e.style.display=""})),[y,k,ke].forEach((e=>e.style.display="none")),clear_Gallery()};f.addEventListener("click",(()=>Ce())),b.addEventListener("click",(()=>([y,d,u,s,r,ke].forEach((e=>{e.style.display="none"})),k.style.display="block",void clear_Gallery()))),C.addEventListener("click",(()=>{De++,fe(De),me(De,0)})),h.addEventListener("click",(()=>{De>1&&(De--,fe(De),me(De,0))})),p.addEventListener("click",(()=>{[S,q].forEach((e=>{e.style.backgroundColor="#36404c"})),De=25,fe(De),p.style.backgroundColor="#4a5460",userMode="default",_e()})),S.addEventListener("click",(()=>{[p,q].forEach((e=>{e.style.backgroundColor="#36404c"})),De=5,fe(De),S.style.backgroundColor="#4a5460",userMode="break",_e()})),q.addEventListener("click",(()=>{[S,p].forEach((e=>{e.style.backgroundColor="#36404c"})),De=25,fe(De),q.style.backgroundColor="#4a5460",userMode="automatic",alert("in progress!"),_e()})),D.addEventListener("click",(()=>Ce()));let he=document.querySelector(".navBarLinks");E.addEventListener("click",(()=>he.classList.toggle("show")));const Se=(e,t,o)=>{const r=document.querySelector("."+e);r.setAttribute("title",t);const l=document.createElement("i");l.classList.add("fas",o,"fa-lg"),r.appendChild(l)};let pe,qe,Le,Ae="light",xe="piano";W.onAuthStateChanged((function(e){if(e){let t=Z(e.email);firebase.database().ref("users").child(t).on("value",(function(e){e.val().theme&&(Ae=e.val().theme,"light"==Ae?R():U()),e.val().sound&&(xe=e.val().sound)}))}})),Se("start","start","fa-play"),Se("reset","reset","fa-redo"),Se("pause","pause","fa-stop");let De=25,Be=60*De;const Ie=()=>{0==Be&&(clearInterval(qe),ye(),se());const e=Math.floor(Be/60),t=Be%60;0!==Be?(me(e,t),Be--,Ee()):me(e,t)},we=()=>{null!=Le&&(Be="pause"==Le?pe:60*De),qe=setInterval(Ie,1e3)};c.addEventListener("click",(()=>{c.classList.toggle("ph-toggle-right"),B++,B%2!=0?U():R()}));const _e=()=>{document.querySelector(".current_Mode").textContent="default mode"};_e()}},t={};function o(r){if(t[r])return t[r].exports;var l=t[r]={exports:{}};return e[r](l,l.exports,o),l.exports}o.d=(e,t)=>{for(var r in t)o.o(t,r)&&!o.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o(717)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,