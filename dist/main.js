(()=>{"use strict";var e={147:(e,t,o)=>{o.d(t,{gz:()=>Xe,sS:()=>rt,rC:()=>Ye,DH:()=>nt,HT:()=>Ne,m1:()=>ot,jW:()=>ct,_y:()=>tt,_:()=>et,LK:()=>Ze,g1:()=>Qe,E5:()=>Je});const r=document.querySelector(".flexMain"),l=document.querySelector(".pause"),n=document.querySelector(".start"),c=document.querySelector(".reset"),s=document.querySelector(".themeToggle_btn"),a=document.querySelector("body"),d=document.querySelector(".squareBox"),u=document.querySelector(".sessionBtns"),i=document.querySelector(".score"),y=document.querySelector(".settingsBtn"),m=document.querySelector(".settingsPage"),f=document.querySelector(".defaultDark"),g=document.querySelector(".defaultLight"),E=document.querySelector(".brandLogo"),k=document.querySelector(".aboutPage"),b=document.querySelector(".dashboardLink"),S=document.querySelector(".dashboardPage"),C=document.querySelector(".aboutBtn"),p=document.querySelector(".menulink-toggle"),v=document.querySelector(".modesLink"),q=document.querySelector(".modesDiv"),h=document.querySelector(".modeCurrentTime"),L=document.querySelector(".increaseTimeArrow"),A=document.querySelector(".decreaseTimeArrow"),x=document.querySelector(".breakMode"),I=document.querySelector(".defaultMode"),w=document.querySelector(".automaticMode"),D=document.querySelector(".timerModes"),B=document.querySelector(".modeSettings"),_=document.querySelector(".increaseTimeChevron"),P=document.querySelector(".saveBtnFLex");document.querySelector(".timerSoundsDiv");let F=document.querySelector(".gemsAvailable");const $=e=>{F.textContent=e},M=e=>`https://gitlab.com/siduck761/ezli/-/raw/master/sfw/${e}.jpg`;let T=document.querySelector(".showCollection"),O=document.querySelector(".imagePreviewer"),z=document.querySelector(".default_WaifuCard_Div"),W=document.querySelector(".default_WaifuCard_Img");const j=()=>{O.style.display="flex",z.style.display="flex";let e=document.querySelectorAll(".sampleWaifuCard");e.length>0&&e.forEach((e=>e.remove()))};document.querySelector(".unlockRewardsDiv").addEventListener("click",(()=>{if(O.style.display="flex",z.style.display="grid",j(),Ze>=2e3)return tt=parseInt(tt)+1,Ze-=2e3,$(Ze),xe(),We(z),void W.setAttribute("src",M(tt));alert("not enough gems!")}));const R=e=>{const t=new Image;t.src=M(e),t.classList.add("sampleWaifuCard"),t.setAttribute("loading","lazy"),O.appendChild(t)};T.addEventListener("click",(()=>{j(),O.style.display="grid",z.style.display="none",(e=>{for(let t=1;t<=e;t++)R(t)})(tt)}));let H=0;const U=e=>{Je=e,xe()},G=(e,t)=>{a.style.backgroundColor=t,a.style.color=e},K=(e,t)=>{let o=document.querySelector(".current_Mode");o.style.color=e,o.style.backgroundColor=t},V=(e,t)=>{d.style.backgroundColor=e,d.style.borderColor=t},Y=(e,t,o)=>{let r=document.querySelector(".innerC"),l=document.querySelector(".outerC"),n=document.querySelector("svg");l.style.stroke=e,r.style.stroke=t,n.style.fill=o},N=(e,t)=>{u.style.backgroundColor=e,u.style.borderColor=t},X=(e,t,o)=>{[n,l].forEach((r=>{r.style.backgroundColor=t,r.style.color=e,r.addEventListener("mouseover",(()=>{r.style.backgroundColor=o,r.style.color=t})),r.addEventListener("mouseout",(()=>{r.style.backgroundColor=t,r.style.color=e}))}))},Z=(e,t,o)=>{c.style.backgroundColor=t,c.style.color=e,c.addEventListener("mouseover",(()=>{c.style.backgroundColor=o})),c.addEventListener("mouseout",(()=>{c.style.backgroundColor=t}))},J=(e,t,o,r,l,n)=>{D.style.backgroundColor=t,[I,x,w].forEach((o=>{o.style.color=e,o.style.backgroundColor=t,o.addEventListener("click",(()=>{}))})),I.addEventListener("click",(()=>{[x,w].forEach((e=>{e.style.backgroundColor=t})),I.style.backgroundColor=o})),x.addEventListener("click",(()=>{[I,w].forEach((e=>{e.style.backgroundColor=t})),x.style.backgroundColor=o})),w.addEventListener("click",(()=>{[I,x].forEach((e=>{e.style.backgroundColor=t})),w.style.backgroundColor=o})),B.style.backgroundColor=r,h.style.color=l,h.style.backgroundColor=n,[L,A,_].forEach((e=>{e.style.backgroundColor=n,e.style.color=l,e!=_&&(e.addEventListener("mouseover",(()=>{e.style.backgroundColor=l,e.style.color=n})),e.addEventListener("mouseout",(()=>{e.style.backgroundColor=n,e.style.color=l})))})),I.style.backgroundColor=o,P.style.backgroundColor=t,P.style.color=e,P.addEventListener("mouseover",(()=>{P.style.backgroundColor=o,P.style.color=e})),P.addEventListener("mouseout",(()=>{P.style.backgroundColor=t,P.style.color=e}))},Q=(e,t)=>{document.querySelectorAll("li").forEach((t=>{t.style.color=e})),document.querySelectorAll("h2").forEach((e=>{e.style.color=t,e.style.borderColor=t}))},ee=(e,t)=>{let o=document.querySelector(".settingsbtn");o.style.color=e,o.style.backgroundColor=t},te=(e,t,o,r,l)=>{document.querySelector(".dashboardPage").style.backgroundColor=l,document.querySelectorAll(".currentScore").forEach((o=>{o.style.color=e,o.style.backgroundColor=t}));let n=document.querySelector(".score");n.style.backgroundColor=o,n.style.color=r},oe=(e,t,o,r)=>{let l=document.querySelector(".scoreProgress"),n=document.querySelector(".scoreInnerCircle"),c=document.querySelector(".scoreOuterCircle"),s=document.querySelector(".scoreCircle");n.style.stroke=e,c.style.stroke=t,s.style.fill=o,l.style.backgroundColor=r},re=(e,t,o,r,l)=>{let n=document.querySelector(".sound_Settings");n.style.backgroundColor=l,n.style.color=o;let c=document.querySelectorAll(".timer_audio");c.forEach((l=>{l.style.backgroundColor=r,l.addEventListener("mouseover",(()=>{l.style.backgroundColor=t,l.style.color=e})),l.addEventListener("mouseout",(()=>{l.style.backgroundColor=r,l.style.color=o})),l.addEventListener("click",(()=>{for(let e=0;e<De.length;e++)c[e].style.color=o,c[e].style.textDecoration="line-through",c[e].style.backgroundColor=r,c[e].style.border="none";l.style.textDecoration="none",l.style.backgroundColor="red",l.style.color="blue"}))}))},le=(e,t,o,r,l,n)=>{document.querySelector(".auth_Div").style.backgroundColor=e;let c=document.querySelector(".ph-key"),s=document.querySelector(".ph-at"),a=document.querySelector("#userEmail"),d=document.querySelector("#userPassword"),u=document.querySelector(".userAvatar_Div");[c,s,a,d,u].forEach((e=>{e.style.backgroundColor=t,e!=a&&e!=d||(e.style.color=o)}));let i=document.querySelector("#signUpBtn"),y=document.querySelector("#signInBtn"),m=document.querySelector("#signOutBtn");[i,y].forEach((e=>{e.style.backgroundColor=t,e.style.color=r})),m.style.backgroundColor=n,m.style.color=l},ne=(e,t,o,r,l,n,c,s,a)=>{document.querySelector(".rewardsPage").style.backgroundColor=e,document.querySelector(".remainingGems_Div").style.backgroundColor=t,document.querySelector(".waifuPrice").style.color=o,document.querySelector(".unlockRewardsDiv").style.backgroundColor=r;const d=document.querySelector(".unlockRewards_title");d.style.backgroundColor=l,d.style.color=n;const u=document.querySelector(".showCollection");u.style.backgroundColor=c,u.style.color=s,document.querySelector(".imagePreviewer").style.backgroundColor=a},ce=()=>{U("light"),G("#545E6A","#ffffff"),V("#ffffff","#fafafa"),K("#527f6b","#caf7e3"),N("#ffffff","#fafafa"),X("#668aa4","#C0E4FE","#668aa4"),Z("#FD8A89","#FFD9D8","#ffffff"),ee("white","#545E6A"),J("#ffffff","#545E6A","#4a5460","#C0E4FE","#545E6A","#ffffff"),Q("#545e6a","#545e6a"),Y("#f0f0f0","#C0E4FE","#545e6a"),te("#82868E","#ffffff","#545e6a","#ffffff","#fafafa"),oe("#8deeb9","#f0f0f0","#82868E","#ffffff"),re("#545e6a","#ffffff","#545e6a","#8deeb9","#8deeb9"),le("#CAEEFF","white","#545e6a","#545e6a","white","#545e6a"),ze()},se=()=>{U("dark"),G("#a4aeba","#1E222A"),V("#23272f","#23272f"),K("#878b93","#2d3139"),N("#2a2e36","#2a2e36"),X("#E78992","#1E222A","#E78992"),N("#2a2e36","#2a2e36"),X("#E78992","#1E222A","#E78992"),Z("#a4aeba","#1E222A","#61afef"),ee("#8deeb9","#23272f"),J("#a4aeba","#2C323B","#4a5460","#40464F","#61afef","#2C323B"),Q("#C3C7CF","#AAAEB6"),Y("#1E222A","#61afef","#61afef"),te("#787C84","#1E222A","#FF6E67","#1E222A","#23272f"),oe("#A3BE8C","#23272f","#787C84","#1E222A"),re("#FF6E67","#1E222A","#787C84","#2a2e36","#2a2e36","#1E222A"),le("#23272F","#2D3139","#C3C7CF","#C3C7CF","#FF6E67","#2D3139"),ze(),ne("#23272f","#292d35","#23272F","#a3b8ef","#2a2e36","#FF6E67","#23272f","#7ed491","#1E222A")};g.addEventListener("click",ce),f.addEventListener("click",se);let ae=document.querySelector(".score");firebase.initializeApp({apiKey:"AIzaSyAk8kebOX8MDqtYYyy7sAdd4fsZa4R8M0s",authDomain:"pomoreward.firebaseapp.com",projectId:"pomoreward",storageBucket:"pomoreward.appspot.com",messagingSenderId:"319256565665",appId:"1:319256565665:web:62d73e7fb1a493d51d5de0"});const de=firebase.auth(),ue=e=>{let t=document.querySelector(".userAvatar_Div"),o=document.querySelector(".email_InputDiv"),r=document.querySelector(".pass_InputDiv");"show"==e?(o.style.display="none",r.style.display="none",t.style.display="flex"):(t.style.display="none",o.style.display="flex",r.style.display="flex")};let ie=document.getElementById("signUpBtn"),ye=document.getElementById("signInBtn"),me=document.getElementById("signOutBtn"),fe=document.querySelector(".authDiv_Header");const ge=e=>{let t="";for(let o=0;o<e.length&&"@"!=e[o];o++)t+=e[o];return t};de.onAuthStateChanged((function(e){if(e){let t=e.email;fe.innerText=ge(t),ye.style.display="none",ie.style.display="none",ue("show")}else ue("hide"),fe.innerText="Account",ye.style.display="flex",ie.style.display="flex"})),ie.addEventListener("click",(()=>{(()=>{let e=document.getElementById("userEmail"),t=document.getElementById("userPassword");de.createUserWithEmailAndPassword(e.value,t.value).catch((e=>alert(e.message)))})()})),ye.addEventListener("click",(()=>{(()=>{let e=document.getElementById("userEmail"),t=document.getElementById("userPassword");de.signInWithEmailAndPassword(e.value,t.value).catch((e=>alert(e.message)))})()})),me.addEventListener("click",(()=>{(()=>{de.signOut();let e=document.getElementById("userEmail"),t=document.getElementById("userPassword");e.value="",t.value="",location.reload()})(),ae.innerText=0,$(0)}));let Ee=document.querySelector(".userStatus"),ke=document.querySelector(".auth_Div");const be=document.querySelector(".settingsPage"),Se=document.querySelector(".dashboardPage"),Ce=document.querySelector(".modesDiv"),pe=document.querySelector(".aboutPage"),ve=document.querySelector(".reset"),qe=document.querySelector(".squareBox"),he=document.querySelector(".sessionBtns"),Le=document.querySelector(".flexMain"),Ae=document.querySelector(".rewardsPage");Ee.addEventListener("click",(()=>{[be,pe,qe,he,ve,Se,Le,Ce,Ae].forEach((e=>{e.style.display="none"})),ke.style.display="flex"}));const xe=()=>{de.onAuthStateChanged((function(e){if(e){let t=ge(e.email);firebase.database().ref(`users/${t}`).set({score:`${Ze}`,theme:`${Je}`,sound:`${Qe}`,cards:`${tt}`})}}))};let Ie=document.querySelector(".sound_Settings");const we=e=>{let t=document.createElement("p");t.classList.add("timer_audio"),t.textContent=e,Ie.appendChild(t)},De=["cocGame","siren","yooo","pikachuu","angryBird","gnuReload","piano","vasco_shot","pizzaro"];(()=>{for(let e=0;e<De.length;e++)we(De[e])})();let Be=document.querySelectorAll(".timer_audio");Be.forEach((e=>{e.addEventListener("mouseover",(()=>{e.style.backgroundColor="#545E6A",e.style.cursor="pointer",e.style.color="white"})),e.addEventListener("mouseout",(()=>{e.style.backgroundColor="#fafafa",e.style.cursor="default",e.style.color="#545E6A"})),e.addEventListener("click",(()=>{for(let e=0;e<De.length;e++)Be[e].style.border="none",Be[e].style.color="#82868E",Be[e].style.textDecoration="line-through";e.style.textDecoration="none",e.style.color="#545E6A",e.style.border="5px dotted #545E6A",e.style.backgroundColor="pink",Qe=e.innerText,xe(),document.querySelector("#dingding").setAttribute("src",`./assets/sounds/${Qe}.mp3`),Pe()}))}));let _e=document.querySelector(".timerText");const Pe=()=>{xe();let e=document.querySelector("#dingding");e.setAttribute("src",`./assets/sounds/${Qe}.mp3`),e.play()},Fe=(e,t)=>{let o;e<10?o=`0${e} : ${t}`:t<10&&(o=`${e} : 0${t}`),o=`${e} : ${t}`,_e.textContent=o},$e=()=>{_e.style.backgroundImage="url('https://media1.tenor.com/images/5fe35bec1c80a880bf59ae32a9716ace/tenor.gif?itemid=8953038')",_e.textContent=">:("},Me=()=>{let e=document.querySelector(".score"),t=parseInt(e.textContent)/5e4*100,o=document.querySelector(".scoreInnerCircle"),r=2*o.r.baseVal.value*Math.PI;o.style.strokeDasharray=r,o.style.strokeDashoffset=r-t/100*r},Te=e=>{h.textContent=e<10?`0${e} : 00`:`${e} : 00`},Oe=()=>{let e=(ot-rt/60)/ot*100,t=document.querySelector(".innerC"),o=2*t.r.baseVal.value*Math.PI;t.style.strokeDasharray=o,t.style.strokeDashoffset=o-e/100*o};const ze=()=>{let e="#"+document.querySelector("body").style.backgroundColor.match(/\d+/g).map((e=>(+e).toString(16).padStart(2,0))).join``;var t;document.querySelector(".aboutCaption").style.backgroundColor=(t="light"!=Je?10:-7,"#"+e.replace(/^#/,"").replace(/../g,(e=>("0"+Math.min(255,Math.max(0,parseInt(e,16)+t)).toString(16)).substr(-2))))},We=e=>{e.animate([{transform:"rotate(0deg)"},{transform:"rotate(360deg)"}],{duration:1e3,iterations:1})};let je=document.querySelector(".auth_Div"),Re=document.querySelector(".rewardsLink"),He=document.querySelector(".rewardsPage");[n,c].forEach((e=>{e.addEventListener("click",(()=>(_e.style.animation=" none",_e.style.backgroundImage="none","reset"===e.className?(Xe="reset",clearInterval(Ne),rt=60*ot,Fe(ot,0),void Oe()):(Xe="start",new Audio("./assets/sounds/tick.mp3").play(),clearInterval(Ne),void nt()))))}));let Ue=0;l.addEventListener("click",(()=>{Ue++,Xe=Ue%2==0?"resume":"pause","pause"==Xe?(()=>{rt!==60*ot&&0!==rt||$e(),Xe="pause",Ye=rt,clearInterval(Ne);const e=Math.floor(Ye/60);Fe(e,Ye%60)})():(rt!==60*ot&&0!==rt||$e(),Xe="pause",rt!=60*ot&&nt())})),y.addEventListener("mouseover",(()=>y.style.textDecoration="underline")),y.addEventListener("mouseout",(()=>y.style.textDecoration="none")),y.addEventListener("click",(()=>{[d,u,c,k,q,S,r,je,He].forEach((e=>e.style.display="none")),m.style.display="flex",j()}));const Ge=()=>{[d,u,c,r].forEach((e=>{e.style.display=""})),[m,k,q,S,je,He].forEach((e=>e.style.display="none")),j()};E.addEventListener("click",(()=>Ge())),C.addEventListener("click",(()=>([d,u,c,m,q,S,r,je,He].forEach((e=>{e.style.display="none"})),k.style.display="block",void j()))),v.addEventListener("click",(()=>([m,k,d,u,c,S,r,je,He].forEach((e=>{e.style.display="none"})),q.style.display="block",void j()))),b.addEventListener("click",(()=>([d,u,c,m,q,k,r,je,He].forEach((e=>{e.style.display="none"})),S.style.display="grid",void j()))),Re.addEventListener("click",(()=>([d,u,c,m,q,k,r,je,S].forEach((e=>{e.style.display="none"})),He.style.display="grid",void j()))),L.addEventListener("click",(()=>{ot++,Te(ot),Fe(ot,0)})),A.addEventListener("click",(()=>{ot>1&&(ot--,Te(ot),Fe(ot,0))})),I.addEventListener("click",(()=>{[x,w].forEach((e=>{e.style.backgroundColor="#36404c"})),ot=25,Te(ot),I.style.backgroundColor="#4a5460",et="default",ct()})),x.addEventListener("click",(()=>{[I,w].forEach((e=>{e.style.backgroundColor="#36404c"})),ot=5,Te(ot),x.style.backgroundColor="#4a5460",et="break",ct()})),w.addEventListener("click",(()=>{[x,I].forEach((e=>{e.style.backgroundColor="#36404c"})),ot=25,Te(ot),w.style.backgroundColor="#4a5460",et="automatic",alert("in progress!"),ct()})),P.addEventListener("click",(()=>Ge()));let Ke=document.querySelector(".navBarLinks");p.addEventListener("click",(()=>Ke.classList.toggle("show")));const Ve=(e,t,o)=>{const r=document.querySelector("."+e);r.setAttribute("title",t);const l=document.createElement("i");l.classList.add("fas",o,"fa-lg"),r.appendChild(l)};let Ye,Ne,Xe,Ze=0,Je="light",Qe="piano",et="default",tt=0;de.onAuthStateChanged((function(e){if(e){let t=ge(e.email);firebase.database().ref("users").child(t).on("value",(function(e){Je=e.val().theme,"light"==Je?ce():se(),Ze=e.val().score,$(Ze),Qe=e.val().sound,tt=e.val().cards?e.val().cards:0,ae.innerText=parseInt(`${Ze}`)+parseInt(2e3*`${tt}`),Me()}))}})),Ve("start","start","fa-play"),Ve("reset","reset","fa-redo"),Ve("pause","pause","fa-stop");let ot=25,rt=60*ot;const lt=()=>{0==rt&&(clearInterval(Ne),Pe(),"default"==et&&(Ze=parseInt(Ze),Ze+=10*ot,Me(),i.innerText=parseInt(`${Ze}`)+parseInt(2e3*`${tt}`),$(Ze),xe()));const e=Math.floor(rt/60),t=rt%60;0!==rt?(Fe(e,t),rt--,Oe()):Fe(e,t)},nt=()=>{rt="pause"==Xe?Ye:60*ot,Ne=setInterval(lt,1e3)};s.addEventListener("click",(()=>{s.classList.toggle("ph-toggle-right"),H++,H%2!=0?se():ce()}));const ct=()=>{document.querySelector(".current_Mode").textContent=`${et} mode`};ct(),i.innerText=parseInt(`${Ze}`)+parseInt(2e3*`${tt}`),$(Ze)}},t={};function o(r){if(t[r])return t[r].exports;var l=t[r]={exports:{}};return e[r](l,l.exports,o),l.exports}o.d=(e,t)=>{for(var r in t)o.o(t,r)&&!o.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o(147)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb21vZG9yby8uL2pzX3NyYy9tb2R1bGVzL2RpdlNlbGVjdG9ycy5qcyIsIndlYnBhY2s6Ly9wb21vZG9yby8uL2pzX3NyYy9tb2R1bGVzL3Jld2FyZHNQYWdlLmpzIiwid2VicGFjazovL3BvbW9kb3JvLy4vanNfc3JjL21vZHVsZXMvdGhlbWVzLmpzIiwid2VicGFjazovL3BvbW9kb3JvLy4vanNfc3JjL21vZHVsZXMvdXNlckF1dGguanMiLCJ3ZWJwYWNrOi8vcG9tb2Rvcm8vLi9qc19zcmMvbW9kdWxlcy9zZXR0aW5ncy5qcyIsIndlYnBhY2s6Ly9wb21vZG9yby8uL2pzX3NyYy9tb2R1bGVzL21pc2NGdW5jcy5qcyIsIndlYnBhY2s6Ly9wb21vZG9yby8uL2pzX3NyYy9tb2R1bGVzL2J1dHRvbkNsaWNrQWN0aW9ucy5qcyIsIndlYnBhY2s6Ly9wb21vZG9yby8uL2pzX3NyYy9tb2R1bGVzL3Nlc3Npb25CdXR0b25zLmpzIiwid2VicGFjazovL3BvbW9kb3JvLy4vanNfc3JjL2luZGV4LmpzIiwid2VicGFjazovL3BvbW9kb3JvL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3BvbW9kb3JvL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9wb21vZG9yby93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3BvbW9kb3JvL3dlYnBhY2svc3RhcnR1cCJdLCJuYW1lcyI6WyJtYWluRmxleCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInBhdXNlIiwic3RhcnQiLCJ0aGVtZVRvZ2dsZSIsImJvZHkiLCJzcXVhcmVCb3giLCJzZXNzaW9uQnRucyIsInNjb3JlIiwic2V0dGluZ3NCdG4iLCJzZXR0aW5nc1BhZ2UiLCJkZWZhdWx0RGFyayIsImRlZmF1bHRMaWdodCIsImhvbWVQYWdlIiwiYWJvdXRQYWdlIiwiZGFzaGJvYXJkTGluayIsImRhc2hib2FyZFBhZ2UiLCJhYm91dEJ0biIsIm1lbnVMaW5rX3RvZ2dsZSIsIm1vZGVzTGluayIsIm1vZGVzRGl2IiwibW9kZUN1cnJlbnRUaW1lIiwiaW5jcmVhc2VUaW1lQXJyb3ciLCJkZWNyZWFzZVRpbWVBcnJvdyIsImJyZWFrTW9kZSIsImRlZmF1bHRNb2RlIiwiYXV0b21hdGljTW9kZSIsInRpbWVyTW9kZXMiLCJtb2RlU2V0dGluZ3MiLCJpbmNyZWFzZVRpbWVDaGV2cm9uIiwic2F2ZUJ0bkZMZXgiLCJnZW1zQXZhaWxhYmxlIiwic2hvd1JlbWFpbmluZ19HZW1zIiwiZ2VtcyIsInRleHRDb250ZW50IiwiY3JlYXRlX0ltYWdlTGluayIsIm4iLCJnYWxsZXJ5QnRuIiwiaW1hZ2VQcmV2aWV3ZXIiLCJkZWZhdWx0X1dhaWZ1Q2FyZF9EaXYiLCJkZWZhdWx0X1dhaWZ1Q2FyZF9JbWciLCJjbGVhcl9HYWxsZXJ5Iiwic3R5bGUiLCJkaXNwbGF5Iiwic2FtcGxlV2FpZnVDYXJkIiwicXVlcnlTZWxlY3RvckFsbCIsImxlbmd0aCIsImZvckVhY2giLCJ0IiwicmVtb3ZlIiwiYWRkRXZlbnRMaXN0ZW5lciIsInVzZXJTY29yZSIsInVzZXJDYXJkcyIsInBhcnNlSW50Iiwic2F2ZVVzZXJEYXRhX3RvREIiLCJhZGRfbG9hZGluZ0FuaW1hdGlvbiIsInNldEF0dHJpYnV0ZSIsImFsZXJ0IiwiY3JlYXRlX1dhaWZ1Q2FyZCIsImNhcmRJbWciLCJJbWFnZSIsInNyYyIsImNsYXNzTGlzdCIsImFkZCIsImFwcGVuZENoaWxkIiwiaSIsInVwZGF0ZV9HYWxsZXJ5Iiwid2hpY2hUaGVtZSIsImNyZWF0ZVRoZW1lIiwibmFtZSIsInVzZXJUaGVtZSIsImZnIiwiYmciLCJiYWNrZ3JvdW5kQ29sb3IiLCJjb2xvciIsInRlbXBEaXYiLCJib3JkZXJCZyIsImJvcmRlckNvbG9yIiwib3V0ZXJDQkciLCJpbm5lckNCRyIsInN2Z1RleHQiLCJpbm5lckMiLCJvdXRlckMiLCJ0ZXh0VG1wIiwic3Ryb2tlIiwiZmlsbCIsImhvdmVyQ29sIiwidGVtcCIsImhvdmVyQmciLCJoZWFkaW5nRmciLCJoZWFkaW5nQmciLCJhY3RpdmVNb2RlQmciLCJib3hCZyIsImlubmVyVGltZUZnIiwiaW5uZXJUaW1lQmciLCJ0ZW1wcyIsImJ0biIsInNjb3JlYmciLCJzY29yZWZnIiwid2hvbGVCRyIsImlubmVyQ19zdHJva2UiLCJvdXRlckNfc3Ryb2tlIiwic2NvcmVGZyIsIndob2xlRGl2QmciLCJzY29yZVByb2dyZXNzIiwic2NvcmVUZXh0IiwiYWN0aXZlZmciLCJhY3RpdmViZyIsImluYWN0aXZlZmciLCJpbmFjdGl2ZWJnIiwicGFyZW50RGl2QmciLCJwYXJlbnREaXYiLCJtcDNmaWxlcyIsImFsbF9zb3VuZHMiLCJ0ZXh0RGVjb3JhdGlvbiIsImJvcmRlciIsImF1dGhJY29uc0JHIiwiaW5wdXREaXZzRkciLCJhdXRoQnRuc0ZHIiwic2lnbk91dEJ0bkZHIiwic2lnbk91dEJ0bkJHIiwicGFzc3dkSWNvbiIsImVtYWlsSWNvbiIsImVtYWlsSW5wdXREaXYiLCJwYXNzSW5wdXREaXYiLCJ1c2VyQXZhdGFyRGl2Iiwic2lnblVwQnRuIiwic2lnbkluQnRuIiwic2lnbk91dEJ0biIsIndob2xlQmciLCJyZW1haW5pbmdHZW1zQmciLCJ3YWlmdVByaWNlRkciLCJ1bmxvY2tSZXdhcmRzRGl2QmciLCJ1bmxvY2tSZXdhcmRzX3RpdGxlQmciLCJ1bmxvY2tSZXdhcmRzX3RpdGxlRmciLCJzaG93Q29sbGVjdGlvbkJnIiwic2hvd0NvbGxlY3Rpb25GZyIsImdhbGxlcnlCZyIsInVubG9ja1Jld2FyZHNfdGl0bGUiLCJzaG93Q29sbGVjdGlvbiIsInVzZUxpZ2h0VGhlbWUiLCJjcmVhdGVfTGlnaHRlclNoYWRlIiwidXNlRGFya1RoZW1lIiwiZmlyZWJhc2UiLCJpbml0aWFsaXplQXBwIiwiYXBpS2V5IiwiYXV0aERvbWFpbiIsInByb2plY3RJZCIsInN0b3JhZ2VCdWNrZXQiLCJtZXNzYWdpbmdTZW5kZXJJZCIsImFwcElkIiwiYXV0aCIsInVzZXJfQXZhdGFyIiwiYWN0aW9uIiwiYXZhdGFyRGl2IiwiZ2V0RWxlbWVudEJ5SWQiLCJ1c3JuYW1lX0RpdiIsImNyZWF0ZVVzZXJOYW1lX2Zyb21FbWFpbCIsImVtYWlsIiwicmVzdWx0Iiwib25BdXRoU3RhdGVDaGFuZ2VkIiwidXNlciIsImlubmVyVGV4dCIsInBhc3N3b3JkIiwiY3JlYXRlVXNlcldpdGhFbWFpbEFuZFBhc3N3b3JkIiwidmFsdWUiLCJjYXRjaCIsImUiLCJtZXNzYWdlIiwic2lnblVwIiwic2lnbkluV2l0aEVtYWlsQW5kUGFzc3dvcmQiLCJzaWduSW4iLCJzaWduT3V0IiwibG9jYXRpb24iLCJyZWxvYWQiLCJ1c2VyU3RhdHVzIiwiYXV0aF9EaXYiLCJyZXdhcmRzUGFnZSIsInVzZXJfTmFtZSIsImRhdGFiYXNlIiwicmVmIiwic2V0IiwidGhlbWUiLCJzb3VuZCIsInVzZXJTb3VuZCIsImNhcmRzIiwic291bmRfU2V0dGluZ3MiLCJhZGRfVGltZXJTb3VuZCIsImF1ZGlvX2ZpbGUiLCJiZWUiLCJjcmVhdGVFbGVtZW50IiwiYWRkX0F1ZGlvcyIsImN1cnNvciIsInRpbWVyU291bmQiLCJpbm5lckNpcmNsZSIsImIiLCJwbGF5Iiwic2V0Qm94VGV4dCIsIm1pbiIsInNlYyIsImFkZFRvcnR1cmVBbmltYXRpb24iLCJiYWNrZ3JvdW5kSW1hZ2UiLCJzZXRMZXZlbF9Qcm9ncmVzcyIsInBlcmNlbnQiLCJwcm9ncmVzc0NpcmNsZSIsImNpcmN1bSIsInIiLCJiYXNlVmFsIiwiTWF0aCIsIlBJIiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsImRpc3BsYXlNb2RlVGltZSIsInNldENpcmNsZVByb2dyZXNzIiwidG90YWxUaW1lIiwicG9tb1RpbWUiLCJmaW5hbENvbCIsIm1hdGNoIiwibWFwIiwieCIsInRvU3RyaW5nIiwicGFkU3RhcnQiLCJqb2luIiwiYW1vdW50IiwicmVwbGFjZSIsIm1heCIsInN1YnN0ciIsImFuaW1hdGUiLCJ0cmFuc2Zvcm0iLCJkdXJhdGlvbiIsIml0ZXJhdGlvbnMiLCJyZXdhcmRzTGluayIsImFuaW1hdGlvbiIsImNsYXNzTmFtZSIsImN1cnJlbnRDbGljayIsImNsZWFySW50ZXJ2YWwiLCJ0aW1lciIsIkF1ZGlvIiwic3RhcnRQb21vZG9ybyIsInBhdXNlT3JSZXN1bWUiLCJzYXZlTWluIiwiZmxvb3IiLCJwYXVzZVRpbWVyIiwianVtcFRvSG9tZVBhZ2UiLCJ1c2VyTW9kZSIsInVwZGF0ZV9DdXJyZW50TW9kZSIsIm5hdkJhckxpbmtzIiwidG9nZ2xlIiwiY3JlYXRlSWNvbiIsImJ0bkNsYXNzIiwiaG92ZXJUaXRsZSIsImljb25DbGFzcyIsImljb24iLCJjaGlsZCIsIm9uIiwic25hcHNob3QiLCJ2YWwiLCJ1cGRhdGVQb21vZG9ybyIsInNldEludGVydmFsIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJkIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJvYmoiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIl0sIm1hcHBpbmdzIjoid0tBQU8sTUFBTUEsRUFBV0MsU0FBU0MsY0FBYyxhQUVsQ0MsRUFBUUYsU0FBU0MsY0FBYyxVQUMvQkUsRUFBUUgsU0FBU0MsY0FBYyxVQUMvQixFQUFRRCxTQUFTQyxjQUFjLFVBRS9CRyxFQUFjSixTQUFTQyxjQUFjLG9CQUNyQ0ksRUFBT0wsU0FBU0MsY0FBYyxRQUM5QkssRUFBWU4sU0FBU0MsY0FBYyxjQUNuQ00sRUFBY1AsU0FBU0MsY0FBYyxnQkFDckNPLEVBQVFSLFNBQVNDLGNBQWMsVUFDL0JRLEVBQWNULFNBQVNDLGNBQWMsZ0JBQ3JDUyxFQUFlVixTQUFTQyxjQUFjLGlCQUV0Q1UsRUFBY1gsU0FBU0MsY0FBYyxnQkFDckNX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U0MsY0FBYyxpQkFDN0JpQyxZQUFjLEdBQUdrTixXQUdyQkMsS0FFQTdPLEVBQU0wSixVQUFZN0csU0FBUyxHQUFHRixNQUFlRSxTQUEwQixJQUFqQixHQUFHRCxNQUV6RHBCLEVBQW1CbUIsTUNoRmZnTixFQUEyQixHQUcvQixTQUFTQyxFQUFvQkMsR0FFNUIsR0FBR0YsRUFBeUJFLEdBQzNCLE9BQU9GLEVBQXlCRSxHQUFVQyxRQUczQyxJQUFJQyxFQUFTSixFQUF5QkUsR0FBWSxDQUdqREMsUUFBUyxJQU9WLE9BSEFFLEVBQW9CSCxHQUFVRSxFQUFRQSxFQUFPRCxRQUFTRixHQUcvQ0csRUFBT0QsUUNuQmZGLEVBQW9CSyxFQUFJLENBQUNILEVBQVNJLEtBQ2pDLElBQUksSUFBSUMsS0FBT0QsRUFDWE4sRUFBb0JRLEVBQUVGLEVBQVlDLEtBQVNQLEVBQW9CUSxFQUFFTixFQUFTSyxJQUM1RUUsT0FBT0MsZUFBZVIsRUFBU0ssRUFBSyxDQUFFSSxZQUFZLEVBQU1DLElBQUtOLEVBQVdDLE1DSjNFUCxFQUFvQlEsRUFBSSxDQUFDSyxFQUFLQyxJQUFTTCxPQUFPTSxVQUFVQyxlQUFlQyxLQUFLSixFQUFLQyxHQ0VqRmQsRUFBb0IsTSIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IG1haW5GbGV4ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5mbGV4TWFpblwiKTtcblxuZXhwb3J0IGNvbnN0IHBhdXNlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wYXVzZVwiKTtcbmV4cG9ydCBjb25zdCBzdGFydCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc3RhcnRcIik7XG5leHBvcnQgY29uc3QgcmVzZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnJlc2V0XCIpO1xuXG5leHBvcnQgY29uc3QgdGhlbWVUb2dnbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnRoZW1lVG9nZ2xlX2J0blwiKTtcbmV4cG9ydCBjb25zdCBib2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImJvZHlcIik7XG5leHBvcnQgY29uc3Qgc3F1YXJlQm94ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zcXVhcmVCb3hcIik7XG5leHBvcnQgY29uc3Qgc2Vzc2lvbkJ0bnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNlc3Npb25CdG5zXCIpO1xuZXhwb3J0IGNvbnN0IHNjb3JlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zY29yZVwiKTtcbmV4cG9ydCBjb25zdCBzZXR0aW5nc0J0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2V0dGluZ3NCdG5cIik7XG5leHBvcnQgY29uc3Qgc2V0dGluZ3NQYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zZXR0aW5nc1BhZ2VcIik7XG5cbmV4cG9ydCBjb25zdCBkZWZhdWx0RGFyayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZGVmYXVsdERhcmtcIik7XG5leHBvcnQgY29uc3QgZGVmYXVsdExpZ2h0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5kZWZhdWx0TGlnaHRcIik7XG5cbmV4cG9ydCBjb25zdCBob21lUGFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYnJhbmRMb2dvXCIpO1xuZXhwb3J0IGNvbnN0IGFib3V0UGFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWJvdXRQYWdlXCIpO1xuZXhwb3J0IGNvbnN0IGRhc2hib2FyZExpbmsgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmRhc2hib2FyZExpbmtcIik7XG5leHBvcnQgY29uc3QgZGFzaGJvYXJkUGFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZGFzaGJvYXJkUGFnZVwiKTtcbmV4cG9ydCBjb25zdCBhYm91dEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWJvdXRCdG5cIik7XG5leHBvcnQgY29uc3QgbWVudUxpbmtfdG9nZ2xlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tZW51bGluay10b2dnbGVcIik7XG5cbmV4cG9ydCBjb25zdCBtb2Rlc0xpbmsgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGVzTGlua1wiKTtcbmV4cG9ydCBjb25zdCBtb2Rlc0RpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kZXNEaXZcIik7XG5leHBvcnQgY29uc3QgbW9kZUN1cnJlbnRUaW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RlQ3VycmVudFRpbWVcIik7XG5leHBvcnQgY29uc3QgaW5jcmVhc2VUaW1lQXJyb3cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmluY3JlYXNlVGltZUFycm93XCIpO1xuZXhwb3J0IGNvbnN0IGRlY3JlYXNlVGltZUFycm93ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5kZWNyZWFzZVRpbWVBcnJvd1wiKTtcblxuZXhwb3J0IGNvbnN0IGJyZWFrTW9kZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYnJlYWtNb2RlXCIpO1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRNb2RlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5kZWZhdWx0TW9kZVwiKTtcbmV4cG9ydCBjb25zdCBhdXRvbWF0aWNNb2RlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hdXRvbWF0aWNNb2RlXCIpO1xuZXhwb3J0IGNvbnN0IHRpbWVyTW9kZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnRpbWVyTW9kZXNcIik7XG5leHBvcnQgY29uc3QgbW9kZVNldHRpbmdzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RlU2V0dGluZ3NcIik7XG5leHBvcnQgY29uc3QgaW5jcmVhc2VUaW1lQ2hldnJvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gIFwiLmluY3JlYXNlVGltZUNoZXZyb25cIlxuKTtcbmV4cG9ydCBjb25zdCBzYXZlQnRuRkxleCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2F2ZUJ0bkZMZXhcIik7XG5cbi8vIGRhc2hib2FyZFxuXG5leHBvcnQgY29uc3QgdGltZXJTb3VuZHNEaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnRpbWVyU291bmRzRGl2XCIpO1xuIiwiLy8gdXBkYXRlIHNjb3JlID09IHJlbWFpbmluZyBnZW1zXG5cbmxldCBkYlVybCA9IFwiaHR0cHM6Ly9naXRsYWIuY29tL3NpZHVjazc2MS9lemxpLy0vcmF3L21hc3Rlci9zZncvXCI7XG5cbmltcG9ydCB7IHVzZXJTY29yZSwgdXNlckNhcmRzIH0gZnJvbSBcIi4uL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBzYXZlVXNlckRhdGFfdG9EQiB9IGZyb20gXCIuL3VzZXJBdXRoLmpzXCI7XG5pbXBvcnQgeyBhZGRfbG9hZGluZ0FuaW1hdGlvbiB9IGZyb20gXCIuL21pc2NGdW5jcy5qc1wiO1xuXG5sZXQgZ2Vtc0F2YWlsYWJsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZ2Vtc0F2YWlsYWJsZVwiKTtcblxuZXhwb3J0IGNvbnN0IHNob3dSZW1haW5pbmdfR2VtcyA9IChnZW1zKSA9PiB7XG4gIGdlbXNBdmFpbGFibGUudGV4dENvbnRlbnQgPSBnZW1zO1xufTtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZV9JbWFnZUxpbmsgPSAobikgPT4ge1xuICByZXR1cm4gYCR7ZGJVcmx9JHtufS5qcGdgO1xufTtcblxubGV0IGdhbGxlcnlCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNob3dDb2xsZWN0aW9uXCIpO1xubGV0IGltYWdlUHJldmlld2VyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5pbWFnZVByZXZpZXdlclwiKTtcbmxldCBkZWZhdWx0X1dhaWZ1Q2FyZF9EaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmRlZmF1bHRfV2FpZnVDYXJkX0RpdlwiKTtcbmxldCBkZWZhdWx0X1dhaWZ1Q2FyZF9JbWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmRlZmF1bHRfV2FpZnVDYXJkX0ltZ1wiKTtcblxuZXhwb3J0IGNvbnN0IGNsZWFyX0dhbGxlcnkgPSAoKSA9PiB7XG4gIGltYWdlUHJldmlld2VyLnN0eWxlLmRpc3BsYXkgPSBcImZsZXhcIjtcbiAgZGVmYXVsdF9XYWlmdUNhcmRfRGl2LnN0eWxlLmRpc3BsYXkgPSBcImZsZXhcIjtcblxuICBsZXQgc2FtcGxlV2FpZnVDYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5zYW1wbGVXYWlmdUNhcmRcIik7XG5cbiAgaWYgKHNhbXBsZVdhaWZ1Q2FyZC5sZW5ndGggPiAwKSBzYW1wbGVXYWlmdUNhcmQuZm9yRWFjaCgodCkgPT4gdC5yZW1vdmUoKSk7XG59O1xuXG5sZXQgdW5sb2NrUmV3YXJkc0RpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudW5sb2NrUmV3YXJkc0RpdlwiKTtcblxudW5sb2NrUmV3YXJkc0Rpdi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBpbWFnZVByZXZpZXdlci5zdHlsZS5kaXNwbGF5ID0gXCJmbGV4XCI7XG4gIGRlZmF1bHRfV2FpZnVDYXJkX0Rpdi5zdHlsZS5kaXNwbGF5ID0gXCJncmlkXCI7XG5cbiAgLy8gc2V0cyByZWNlbnRseSBwdXJjaGFzZWQgd2FpZnUgY2FyZFxuXG4gIGNsZWFyX0dhbGxlcnkoKTtcblxuICBpZiAodXNlclNjb3JlID49IDIwMDApIHtcbiAgICB1c2VyQ2FyZHMgPSBwYXJzZUludCh1c2VyQ2FyZHMpICsgMTtcbiAgICB1c2VyU2NvcmUgLT0gMjAwMDtcblxuICAgIC8vIHN5bmMgc2NvcmVzXG4gICAgc2hvd1JlbWFpbmluZ19HZW1zKHVzZXJTY29yZSk7XG4gICAgc2F2ZVVzZXJEYXRhX3RvREIoKTtcblxuICAgIGFkZF9sb2FkaW5nQW5pbWF0aW9uKGRlZmF1bHRfV2FpZnVDYXJkX0Rpdik7XG5cbiAgICBkZWZhdWx0X1dhaWZ1Q2FyZF9JbWcuc2V0QXR0cmlidXRlKFwic3JjXCIsIGNyZWF0ZV9JbWFnZUxpbmsodXNlckNhcmRzKSk7XG5cbiAgICByZXR1cm47XG4gIH1cbiAgYWxlcnQoXCJub3QgZW5vdWdoIGdlbXMhXCIpO1xufSk7XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVfV2FpZnVDYXJkID0gKG4pID0+IHtcbiAgY29uc3QgY2FyZEltZyA9IG5ldyBJbWFnZSgpO1xuXG4gIGNhcmRJbWcuc3JjID0gY3JlYXRlX0ltYWdlTGluayhuKTtcbiAgY2FyZEltZy5jbGFzc0xpc3QuYWRkKFwic2FtcGxlV2FpZnVDYXJkXCIpO1xuICBjYXJkSW1nLnNldEF0dHJpYnV0ZShcImxvYWRpbmdcIiwgXCJsYXp5XCIpO1xuXG4gIGltYWdlUHJldmlld2VyLmFwcGVuZENoaWxkKGNhcmRJbWcpO1xufTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZV9HYWxsZXJ5ID0gKG4pID0+IHtcbiAgZm9yIChsZXQgaSA9IDE7IGkgPD0gbjsgaSsrKSBjcmVhdGVfV2FpZnVDYXJkKGkpO1xufTtcblxuZ2FsbGVyeUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBjbGVhcl9HYWxsZXJ5KCk7XG5cbiAgaW1hZ2VQcmV2aWV3ZXIuc3R5bGUuZGlzcGxheSA9IFwiZ3JpZFwiO1xuICBkZWZhdWx0X1dhaWZ1Q2FyZF9EaXYuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuXG4gIHVwZGF0ZV9HYWxsZXJ5KHVzZXJDYXJkcyk7XG59KTtcbiIsImltcG9ydCB7IHVzZXJUaGVtZSB9IGZyb20gXCIuLi9pbmRleFwiO1xuaW1wb3J0IHsgYWxsX3NvdW5kcyB9IGZyb20gXCIuL3NldHRpbmdzXCI7XG5pbXBvcnQgeyBjcmVhdGVfTGlnaHRlclNoYWRlIH0gZnJvbSBcIi4vbWlzY0Z1bmNzXCI7XG5cbmltcG9ydCB7XG4gIGF1dG9tYXRpY01vZGUsXG4gIGJvZHksXG4gIGJyZWFrTW9kZSxcbiAgZGVmYXVsdERhcmssXG4gIGRlZmF1bHRMaWdodCxcbiAgZGVmYXVsdE1vZGUsXG4gIG1vZGVDdXJyZW50VGltZSxcbiAgbW9kZVNldHRpbmdzLFxuICBpbmNyZWFzZVRpbWVDaGV2cm9uLFxuICBpbmNyZWFzZVRpbWVBcnJvdyxcbiAgZGVjcmVhc2VUaW1lQXJyb3csXG4gIHNhdmVCdG5GTGV4LFxuICBwYXVzZSxcbiAgcmVzZXQsXG4gIHNlc3Npb25CdG5zLFxuICBzcXVhcmVCb3gsXG4gIHN0YXJ0LFxuICB0aGVtZVRvZ2dsZSxcbiAgdGltZXJNb2Rlcyxcbn0gZnJvbSBcIi4vZGl2U2VsZWN0b3JzXCI7XG5cbmltcG9ydCB7IHNhdmVVc2VyRGF0YV90b0RCIH0gZnJvbSBcIi4vdXNlckF1dGguanNcIjtcblxubGV0IHdoaWNoVGhlbWUgPSAwO1xuXG5jb25zdCBjcmVhdGVUaGVtZSA9ICgoKSA9PiB7XG4gIGNvbnN0IHNhdmVUaGlzVGhlbWUgPSAobmFtZSkgPT4ge1xuICAgIHVzZXJUaGVtZSA9IG5hbWU7XG4gICAgc2F2ZVVzZXJEYXRhX3RvREIoKTtcbiAgfTtcblxuICBjb25zdCBib2R5Q29sID0gKGZnLCBiZykgPT4ge1xuICAgIGJvZHkuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gYmc7XG4gICAgYm9keS5zdHlsZS5jb2xvciA9IGZnO1xuICB9O1xuXG4gIGNvbnN0IHNxdWFyZUJveENvbCA9IChiZywgYm9yZGVyQmcpID0+IHtcbiAgICBzcXVhcmVCb3guc3R5bGUuYmFja2dyb3VuZENvbG9yID0gYmc7XG4gICAgc3F1YXJlQm94LnN0eWxlLmJvcmRlckNvbG9yID0gYm9yZGVyQmc7XG4gIH07XG5cbiAgY29uc3Qgc2Vzc2lvbkFyZWFCRyA9IChiZywgYm9yZGVyQmcpID0+IHtcbiAgICBzZXNzaW9uQnRucy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBiZztcbiAgICBzZXNzaW9uQnRucy5zdHlsZS5ib3JkZXJDb2xvciA9IGJvcmRlckJnO1xuICB9O1xuXG4gIGNvbnN0IHNlc3Npb25CdG5Db2wgPSAoZmcsIGJnLCBob3ZlckNvbCkgPT4ge1xuICAgIFtzdGFydCwgcGF1c2VdLmZvckVhY2goKHRlbXApID0+IHtcbiAgICAgIHRlbXAuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gYmc7XG4gICAgICB0ZW1wLnN0eWxlLmNvbG9yID0gZmc7XG5cbiAgICAgIHRlbXAuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlb3ZlclwiLCAoKSA9PiB7XG4gICAgICAgIHRlbXAuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gaG92ZXJDb2w7XG4gICAgICAgIHRlbXAuc3R5bGUuY29sb3IgPSBiZztcbiAgICAgIH0pO1xuXG4gICAgICB0ZW1wLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW91dFwiLCAoKSA9PiB7XG4gICAgICAgIHRlbXAuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gYmc7XG4gICAgICAgIHRlbXAuc3R5bGUuY29sb3IgPSBmZztcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIGNvbnN0IHJlc2V0Q29sID0gKGZnLCBiZywgaG92ZXJCZykgPT4ge1xuICAgIHJlc2V0LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGJnO1xuICAgIHJlc2V0LnN0eWxlLmNvbG9yID0gZmc7XG5cbiAgICByZXNldC5hZGRFdmVudExpc3RlbmVyKFwibW91c2VvdmVyXCIsICgpID0+IHtcbiAgICAgIHJlc2V0LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGhvdmVyQmc7XG4gICAgfSk7XG4gICAgcmVzZXQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlb3V0XCIsICgpID0+IHtcbiAgICAgIHJlc2V0LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGJnO1xuICAgIH0pO1xuICB9O1xuXG4gIGNvbnN0IG1vZGVzUGFnZUNvbCA9IChcbiAgICBoZWFkaW5nRmcsXG4gICAgaGVhZGluZ0JnLFxuICAgIGFjdGl2ZU1vZGVCZyxcbiAgICBib3hCZyxcbiAgICBpbm5lclRpbWVGZyxcbiAgICBpbm5lclRpbWVCZ1xuICApID0+IHtcbiAgICB0aW1lck1vZGVzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGhlYWRpbmdCZztcblxuICAgIC8qIHRpbWVyIG1vZGVzXG4gICAgIGxldCB0aW1lcl9Nb2RlcyA9IFtkZWZhdWx0TW9kZSwgYnJlYWtNb2RlLCBhdXRvbWF0aWNNb2RlXTsgKi9cblxuICAgIFtkZWZhdWx0TW9kZSwgYnJlYWtNb2RlLCBhdXRvbWF0aWNNb2RlXS5mb3JFYWNoKCh0ZW1wKSA9PiB7XG4gICAgICB0ZW1wLnN0eWxlLmNvbG9yID0gaGVhZGluZ0ZnO1xuXG4gICAgICB0ZW1wLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGhlYWRpbmdCZztcblxuICAgICAgdGVtcC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge30pO1xuICAgIH0pO1xuXG4gICAgZGVmYXVsdE1vZGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIFticmVha01vZGUsIGF1dG9tYXRpY01vZGVdLmZvckVhY2goKHRlbXApID0+IHtcbiAgICAgICAgdGVtcC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBoZWFkaW5nQmc7XG4gICAgICB9KTtcblxuICAgICAgZGVmYXVsdE1vZGUuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gYWN0aXZlTW9kZUJnO1xuICAgIH0pO1xuXG4gICAgYnJlYWtNb2RlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICBbZGVmYXVsdE1vZGUsIGF1dG9tYXRpY01vZGVdLmZvckVhY2goKHRlbXApID0+IHtcbiAgICAgICAgdGVtcC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBoZWFkaW5nQmc7XG4gICAgICB9KTtcblxuICAgICAgYnJlYWtNb2RlLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGFjdGl2ZU1vZGVCZztcbiAgICB9KTtcblxuICAgIGF1dG9tYXRpY01vZGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIFtkZWZhdWx0TW9kZSwgYnJlYWtNb2RlXS5mb3JFYWNoKCh0ZW1wKSA9PiB7XG4gICAgICAgIHRlbXAuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gaGVhZGluZ0JnO1xuICAgICAgfSk7XG5cbiAgICAgIGF1dG9tYXRpY01vZGUuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gYWN0aXZlTW9kZUJnO1xuICAgIH0pO1xuXG4gICAgbW9kZVNldHRpbmdzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGJveEJnO1xuICAgIG1vZGVDdXJyZW50VGltZS5zdHlsZS5jb2xvciA9IGlubmVyVGltZUZnO1xuICAgIG1vZGVDdXJyZW50VGltZS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBpbm5lclRpbWVCZztcblxuICAgIFtpbmNyZWFzZVRpbWVBcnJvdywgZGVjcmVhc2VUaW1lQXJyb3csIGluY3JlYXNlVGltZUNoZXZyb25dLmZvckVhY2goXG4gICAgICAodGVtcCkgPT4ge1xuICAgICAgICB0ZW1wLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGlubmVyVGltZUJnO1xuICAgICAgICB0ZW1wLnN0eWxlLmNvbG9yID0gaW5uZXJUaW1lRmc7XG5cbiAgICAgICAgaWYgKHRlbXAgIT0gaW5jcmVhc2VUaW1lQ2hldnJvbikge1xuICAgICAgICAgIHRlbXAuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlb3ZlclwiLCAoKSA9PiB7XG4gICAgICAgICAgICB0ZW1wLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGlubmVyVGltZUZnO1xuICAgICAgICAgICAgdGVtcC5zdHlsZS5jb2xvciA9IGlubmVyVGltZUJnO1xuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgdGVtcC5hZGRFdmVudExpc3RlbmVyKFwibW91c2VvdXRcIiwgKCkgPT4ge1xuICAgICAgICAgICAgdGVtcC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBpbm5lclRpbWVCZztcbiAgICAgICAgICAgIHRlbXAuc3R5bGUuY29sb3IgPSBpbm5lclRpbWVGZztcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICk7XG5cbiAgICBkZWZhdWx0TW9kZS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBhY3RpdmVNb2RlQmc7XG4gICAgLy8gc2NvcmVcblxuICAgIC8vIHNhdmUgdGltZXIgbW9kZVxuICAgIHNhdmVCdG5GTGV4LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGhlYWRpbmdCZztcbiAgICBzYXZlQnRuRkxleC5zdHlsZS5jb2xvciA9IGhlYWRpbmdGZztcblxuICAgIHNhdmVCdG5GTGV4LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW92ZXJcIiwgKCkgPT4ge1xuICAgICAgc2F2ZUJ0bkZMZXguc3R5bGUuYmFja2dyb3VuZENvbG9yID0gYWN0aXZlTW9kZUJnO1xuICAgICAgc2F2ZUJ0bkZMZXguc3R5bGUuY29sb3IgPSBoZWFkaW5nRmc7XG4gICAgfSk7XG4gICAgc2F2ZUJ0bkZMZXguYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlb3V0XCIsICgpID0+IHtcbiAgICAgIHNhdmVCdG5GTGV4LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGhlYWRpbmdCZztcbiAgICAgIHNhdmVCdG5GTGV4LnN0eWxlLmNvbG9yID0gaGVhZGluZ0ZnO1xuICAgIH0pO1xuICB9O1xuXG4gIGNvbnN0IGFib3V0Q29udGV4dCA9IChmZywgaGVhZGluZ0ZnKSA9PiB7XG4gICAgbGV0IHRlbXBzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcImxpXCIpO1xuXG4gICAgdGVtcHMuZm9yRWFjaCgodGVtcHMpID0+IHtcbiAgICAgIHRlbXBzLnN0eWxlLmNvbG9yID0gZmc7XG4gICAgfSk7XG5cbiAgICBsZXQgaGVhZGVycyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJoMlwiKTtcblxuICAgIGhlYWRlcnMuZm9yRWFjaCgodGVtcCkgPT4ge1xuICAgICAgdGVtcC5zdHlsZS5jb2xvciA9IGhlYWRpbmdGZztcbiAgICAgIHRlbXAuc3R5bGUuYm9yZGVyQ29sb3IgPSBoZWFkaW5nRmc7XG4gICAgfSk7XG4gIH07XG5cbiAgY29uc3Qgc3RhcnRfUGF1c2UgPSAoc2ZnLCBzYmcsIHBmZywgcGJnKSA9PiB7XG4gICAgc3RhcnQuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gc2JnO1xuICAgIHN0YXJ0LnN0eWxlLmNvbG9yID0gc2ZnO1xuXG4gICAgcGF1c2Uuc3R5bGUuY29sb3IgPSBwZmc7XG4gICAgcGF1c2Uuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gcGJnO1xuICB9O1xuXG4gIGNvbnN0IGNpcmN1bGFyU3Ryb2tlcyA9IChvdXRlckNCRywgaW5uZXJDQkcsIHN2Z1RleHQpID0+IHtcbiAgICBsZXQgaW5uZXJDID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5pbm5lckNcIik7XG4gICAgbGV0IG91dGVyQyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIub3V0ZXJDXCIpO1xuICAgIGxldCB0ZXh0VG1wID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcInN2Z1wiKTtcblxuICAgIG91dGVyQy5zdHlsZS5zdHJva2UgPSBvdXRlckNCRztcbiAgICBpbm5lckMuc3R5bGUuc3Ryb2tlID0gaW5uZXJDQkc7XG4gICAgdGV4dFRtcC5zdHlsZS5maWxsID0gc3ZnVGV4dDtcbiAgfTtcblxuICAvLyBkYXNoYm9hcmQgc3R1ZmYhXG5cbiAgY29uc3QgZGFzaFNjb3JlID0gKGZnLCBiZywgc2NvcmViZywgc2NvcmVmZywgd2hvbGVCRykgPT4ge1xuICAgIGxldCBkYXNoTWFpbkJnID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5kYXNoYm9hcmRQYWdlXCIpO1xuICAgIGRhc2hNYWluQmcuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gd2hvbGVCRztcblxuICAgIGxldCBjdXJyZW50U2NvcmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmN1cnJlbnRTY29yZVwiKTtcblxuICAgIGN1cnJlbnRTY29yZS5mb3JFYWNoKCh0ZW1wKSA9PiB7XG4gICAgICB0ZW1wLnN0eWxlLmNvbG9yID0gZmc7XG4gICAgICB0ZW1wLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGJnO1xuICAgIH0pO1xuXG4gICAgbGV0IHNjb3JlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zY29yZVwiKTtcbiAgICBzY29yZS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBzY29yZWJnO1xuICAgIHNjb3JlLnN0eWxlLmNvbG9yID0gc2NvcmVmZztcbiAgfTtcblxuICBjb25zdCBsZXZlbFByb2dyZXNzID0gKGlubmVyQ19zdHJva2UsIG91dGVyQ19zdHJva2UsIHNjb3JlRmcsIHdob2xlRGl2QmcpID0+IHtcbiAgICBsZXQgc2NvcmVQcm9ncmVzcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2NvcmVQcm9ncmVzc1wiKTtcbiAgICBsZXQgaW5uZXJDID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zY29yZUlubmVyQ2lyY2xlXCIpO1xuICAgIGxldCBvdXRlckMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNjb3JlT3V0ZXJDaXJjbGVcIik7XG4gICAgbGV0IHNjb3JlVGV4dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2NvcmVDaXJjbGVcIik7XG5cbiAgICBpbm5lckMuc3R5bGUuc3Ryb2tlID0gaW5uZXJDX3N0cm9rZTtcbiAgICBvdXRlckMuc3R5bGUuc3Ryb2tlID0gb3V0ZXJDX3N0cm9rZTtcbiAgICBzY29yZVRleHQuc3R5bGUuZmlsbCA9IHNjb3JlRmc7XG4gICAgc2NvcmVQcm9ncmVzcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSB3aG9sZURpdkJnO1xuICB9O1xuXG4gIC8vIHNldHRpbmdzIHN0dWZmXG5cbiAgY29uc3Qgc2V0dGluZ3NidG5Db2wgPSAoZmcsIGJnKSA9PiB7XG4gICAgbGV0IGJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2V0dGluZ3NidG5cIik7XG4gICAgYnRuLnN0eWxlLmNvbG9yID0gZmc7XG4gICAgYnRuLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGJnO1xuICB9O1xuXG4gIGNvbnN0IHNvdW5kc1NlY3Rpb24gPSAoXG4gICAgYWN0aXZlZmcsXG4gICAgYWN0aXZlYmcsXG4gICAgaW5hY3RpdmVmZyxcbiAgICBpbmFjdGl2ZWJnLFxuICAgIHBhcmVudERpdkJnXG4gICkgPT4ge1xuICAgIGxldCBwYXJlbnREaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNvdW5kX1NldHRpbmdzXCIpO1xuXG4gICAgcGFyZW50RGl2LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IHBhcmVudERpdkJnO1xuICAgIHBhcmVudERpdi5zdHlsZS5jb2xvciA9IGluYWN0aXZlZmc7XG5cbiAgICBsZXQgbXAzZmlsZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnRpbWVyX2F1ZGlvXCIpO1xuXG4gICAgbXAzZmlsZXMuZm9yRWFjaCgodGVtcCkgPT4ge1xuICAgICAgdGVtcC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBpbmFjdGl2ZWJnO1xuXG4gICAgICB0ZW1wLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW92ZXJcIiwgKCkgPT4ge1xuICAgICAgICB0ZW1wLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGFjdGl2ZWJnO1xuICAgICAgICB0ZW1wLnN0eWxlLmNvbG9yID0gYWN0aXZlZmc7XG4gICAgICB9KTtcblxuICAgICAgdGVtcC5hZGRFdmVudExpc3RlbmVyKFwibW91c2VvdXRcIiwgKCkgPT4ge1xuICAgICAgICB0ZW1wLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGluYWN0aXZlYmc7XG4gICAgICAgIHRlbXAuc3R5bGUuY29sb3IgPSBpbmFjdGl2ZWZnO1xuICAgICAgfSk7XG5cbiAgICAgIHRlbXAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhbGxfc291bmRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgbXAzZmlsZXNbaV0uc3R5bGUuY29sb3IgPSBpbmFjdGl2ZWZnO1xuICAgICAgICAgIG1wM2ZpbGVzW2ldLnN0eWxlLnRleHREZWNvcmF0aW9uID0gXCJsaW5lLXRocm91Z2hcIjtcbiAgICAgICAgICBtcDNmaWxlc1tpXS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBpbmFjdGl2ZWJnO1xuICAgICAgICAgIG1wM2ZpbGVzW2ldLnN0eWxlLmJvcmRlciA9IFwibm9uZVwiO1xuICAgICAgICB9XG5cbiAgICAgICAgdGVtcC5zdHlsZS50ZXh0RGVjb3JhdGlvbiA9IFwibm9uZVwiO1xuICAgICAgICB0ZW1wLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwicmVkXCI7XG4gICAgICAgIHRlbXAuc3R5bGUuY29sb3IgPSBcImJsdWVcIjtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIGNvbnN0IGN1cnJlbnRNb2RlX0RpdiA9IChmZywgYmcpID0+IHtcbiAgICBsZXQgdGVtcERpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY3VycmVudF9Nb2RlXCIpO1xuXG4gICAgdGVtcERpdi5zdHlsZS5jb2xvciA9IGZnO1xuICAgIHRlbXBEaXYuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gYmc7XG4gIH07XG5cbiAgY29uc3QgYXV0aF9TZWN0aW9uID0gKFxuICAgIGJnLFxuICAgIGF1dGhJY29uc0JHLFxuICAgIGlucHV0RGl2c0ZHLFxuICAgIGF1dGhCdG5zRkcsXG4gICAgc2lnbk91dEJ0bkZHLFxuICAgIHNpZ25PdXRCdG5CR1xuICApID0+IHtcbiAgICBsZXQgYXV0aERpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYXV0aF9EaXZcIik7XG4gICAgYXV0aERpdi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBiZztcblxuICAgIGxldCBwYXNzd2RJY29uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5waC1rZXlcIik7XG4gICAgbGV0IGVtYWlsSWNvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGgtYXRcIik7XG5cbiAgICBsZXQgZW1haWxJbnB1dERpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjdXNlckVtYWlsXCIpO1xuICAgIGxldCBwYXNzSW5wdXREaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3VzZXJQYXNzd29yZFwiKTtcblxuICAgIGxldCB1c2VyQXZhdGFyRGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi51c2VyQXZhdGFyX0RpdlwiKTtcblxuICAgIFtwYXNzd2RJY29uLCBlbWFpbEljb24sIGVtYWlsSW5wdXREaXYsIHBhc3NJbnB1dERpdiwgdXNlckF2YXRhckRpdl0uZm9yRWFjaChcbiAgICAgICh0KSA9PiB7XG4gICAgICAgIHQuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gYXV0aEljb25zQkc7XG5cbiAgICAgICAgaWYgKHQgPT0gZW1haWxJbnB1dERpdiB8fCB0ID09IHBhc3NJbnB1dERpdilcbiAgICAgICAgICB0LnN0eWxlLmNvbG9yID0gaW5wdXREaXZzRkc7XG4gICAgICB9XG4gICAgKTtcblxuICAgIC8vIGF1dGggYnV0dG9uc1xuXG4gICAgbGV0IHNpZ25VcEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc2lnblVwQnRuXCIpO1xuICAgIGxldCBzaWduSW5CdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3NpZ25JbkJ0blwiKTtcbiAgICBsZXQgc2lnbk91dEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc2lnbk91dEJ0blwiKTtcblxuICAgIFtzaWduVXBCdG4sIHNpZ25JbkJ0bl0uZm9yRWFjaCgodCkgPT4ge1xuICAgICAgdC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBhdXRoSWNvbnNCRztcbiAgICAgIHQuc3R5bGUuY29sb3IgPSBhdXRoQnRuc0ZHO1xuICAgIH0pO1xuXG4gICAgc2lnbk91dEJ0bi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBzaWduT3V0QnRuQkc7XG4gICAgc2lnbk91dEJ0bi5zdHlsZS5jb2xvciA9IHNpZ25PdXRCdG5GRztcbiAgfTtcblxuICBjb25zdCByZXdhcmRzUGFnZURpdiA9IChcbiAgICB3aG9sZUJnLFxuICAgIHJlbWFpbmluZ0dlbXNCZyxcbiAgICB3YWlmdVByaWNlRkcsXG4gICAgdW5sb2NrUmV3YXJkc0RpdkJnLFxuICAgIHVubG9ja1Jld2FyZHNfdGl0bGVCZyxcbiAgICB1bmxvY2tSZXdhcmRzX3RpdGxlRmcsXG4gICAgc2hvd0NvbGxlY3Rpb25CZyxcbiAgICBzaG93Q29sbGVjdGlvbkZnLFxuICAgIGdhbGxlcnlCZ1xuICApID0+IHtcbiAgICBjb25zdCByZXdhcmRzUGFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucmV3YXJkc1BhZ2VcIik7XG4gICAgcmV3YXJkc1BhZ2Uuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gd2hvbGVCZztcblxuICAgIGNvbnN0IHJlbWFpbmluZ0dlbXNfRGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5yZW1haW5pbmdHZW1zX0RpdlwiKTtcbiAgICByZW1haW5pbmdHZW1zX0Rpdi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSByZW1haW5pbmdHZW1zQmc7XG5cbiAgICBjb25zdCB3YWlmdVByaWNlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi53YWlmdVByaWNlXCIpO1xuICAgIHdhaWZ1UHJpY2Uuc3R5bGUuY29sb3IgPSB3YWlmdVByaWNlRkc7XG5cbiAgICBjb25zdCB1bmxvY2tSZXdhcmRzRGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi51bmxvY2tSZXdhcmRzRGl2XCIpO1xuICAgIHVubG9ja1Jld2FyZHNEaXYuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gdW5sb2NrUmV3YXJkc0RpdkJnO1xuXG4gICAgY29uc3QgdW5sb2NrUmV3YXJkc190aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudW5sb2NrUmV3YXJkc190aXRsZVwiKTtcbiAgICB1bmxvY2tSZXdhcmRzX3RpdGxlLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IHVubG9ja1Jld2FyZHNfdGl0bGVCZztcbiAgICB1bmxvY2tSZXdhcmRzX3RpdGxlLnN0eWxlLmNvbG9yID0gdW5sb2NrUmV3YXJkc190aXRsZUZnO1xuXG4gICAgY29uc3Qgc2hvd0NvbGxlY3Rpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNob3dDb2xsZWN0aW9uXCIpO1xuICAgIHNob3dDb2xsZWN0aW9uLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IHNob3dDb2xsZWN0aW9uQmc7XG4gICAgc2hvd0NvbGxlY3Rpb24uc3R5bGUuY29sb3IgPSBzaG93Q29sbGVjdGlvbkZnO1xuXG4gICAgY29uc3QgZ2FsbGVyeSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaW1hZ2VQcmV2aWV3ZXJcIik7XG4gICAgZ2FsbGVyeS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBnYWxsZXJ5Qmc7XG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBzYXZlVGhpc1RoZW1lLFxuICAgIGJvZHlDb2wsXG4gICAgY3VycmVudE1vZGVfRGl2LFxuICAgIHNxdWFyZUJveENvbCxcbiAgICBjaXJjdWxhclN0cm9rZXMsXG4gICAgc2Vzc2lvbkFyZWFCRyxcbiAgICBzZXNzaW9uQnRuQ29sLFxuICAgIHJlc2V0Q29sLFxuICAgIG1vZGVzUGFnZUNvbCxcbiAgICBhYm91dENvbnRleHQsXG4gICAgc3RhcnRfUGF1c2UsXG4gICAgc2V0dGluZ3NidG5Db2wsXG4gICAgZGFzaFNjb3JlLFxuICAgIGxldmVsUHJvZ3Jlc3MsXG4gICAgc291bmRzU2VjdGlvbixcbiAgICBhdXRoX1NlY3Rpb24sXG4gICAgcmV3YXJkc1BhZ2VEaXYsXG4gIH07XG59KSgpO1xuXG4vKiAgaGVhZGluZ0ZnLCBoZWFkaW5nQmcsIGFjdGl2ZU1vZGVCZywgYm94QmcsIGlubmVyVGltZUZnLCBpbm5lclRpbWVCZyAqL1xuXG5leHBvcnQgY29uc3QgdXNlTGlnaHRUaGVtZSA9ICgpID0+IHtcbiAgY3JlYXRlVGhlbWUuc2F2ZVRoaXNUaGVtZShcImxpZ2h0XCIpO1xuICBjcmVhdGVUaGVtZS5ib2R5Q29sKFwiIzU0NUU2QVwiLCBcIiNmZmZmZmZcIik7XG4gIGNyZWF0ZVRoZW1lLnNxdWFyZUJveENvbChcIiNmZmZmZmZcIiwgXCIjZmFmYWZhXCIpO1xuICBjcmVhdGVUaGVtZS5jdXJyZW50TW9kZV9EaXYoXCIjNTI3ZjZiXCIsIFwiI2NhZjdlM1wiKTtcbiAgY3JlYXRlVGhlbWUuc2Vzc2lvbkFyZWFCRyhcIiNmZmZmZmZcIiwgXCIjZmFmYWZhXCIpO1xuICBjcmVhdGVUaGVtZS5zZXNzaW9uQnRuQ29sKFwiIzY2OGFhNFwiLCBcIiNDMEU0RkVcIiwgXCIjNjY4YWE0XCIpO1xuICBjcmVhdGVUaGVtZS5yZXNldENvbChcIiNGRDhBODlcIiwgXCIjRkZEOUQ4XCIsIFwiI2ZmZmZmZlwiKTtcbiAgY3JlYXRlVGhlbWUuc2V0dGluZ3NidG5Db2woXCJ3aGl0ZVwiLCBcIiM1NDVFNkFcIik7XG5cbiAgY3JlYXRlVGhlbWUubW9kZXNQYWdlQ29sKFxuICAgIFwiI2ZmZmZmZlwiLFxuICAgIFwiIzU0NUU2QVwiLFxuICAgIFwiIzRhNTQ2MFwiLFxuICAgIFwiI0MwRTRGRVwiLFxuICAgIFwiIzU0NUU2QVwiLFxuICAgIFwiI2ZmZmZmZlwiXG4gICk7XG5cbiAgY3JlYXRlVGhlbWUuYWJvdXRDb250ZXh0KFwiIzU0NWU2YVwiLCBcIiM1NDVlNmFcIik7XG4gIGNyZWF0ZVRoZW1lLmNpcmN1bGFyU3Ryb2tlcyhcIiNmMGYwZjBcIiwgXCIjQzBFNEZFXCIsIFwiIzU0NWU2YVwiKTtcbiAgY3JlYXRlVGhlbWUuZGFzaFNjb3JlKFwiIzgyODY4RVwiLCBcIiNmZmZmZmZcIiwgXCIjNTQ1ZTZhXCIsIFwiI2ZmZmZmZlwiLCBcIiNmYWZhZmFcIik7XG4gIGNyZWF0ZVRoZW1lLmxldmVsUHJvZ3Jlc3MoXCIjOGRlZWI5XCIsIFwiI2YwZjBmMFwiLCBcIiM4Mjg2OEVcIiwgXCIjZmZmZmZmXCIpO1xuXG4gIGNyZWF0ZVRoZW1lLnNvdW5kc1NlY3Rpb24oXG4gICAgXCIjNTQ1ZTZhXCIsXG4gICAgXCIjZmZmZmZmXCIsXG4gICAgXCIjNTQ1ZTZhXCIsXG4gICAgXCIjOGRlZWI5XCIsXG4gICAgXCIjOGRlZWI5XCJcbiAgKTtcblxuICBjcmVhdGVUaGVtZS5hdXRoX1NlY3Rpb24oXG4gICAgXCIjQ0FFRUZGXCIsXG4gICAgXCJ3aGl0ZVwiLFxuICAgIFwiIzU0NWU2YVwiLFxuICAgIFwiIzU0NWU2YVwiLFxuICAgIFwid2hpdGVcIixcbiAgICBcIiM1NDVlNmFcIlxuICApO1xuXG4gIGNyZWF0ZV9MaWdodGVyU2hhZGUoKTtcbn07XG5cbmV4cG9ydCBjb25zdCB1c2VEYXJrVGhlbWUgPSAoKSA9PiB7XG4gIGNyZWF0ZVRoZW1lLnNhdmVUaGlzVGhlbWUoXCJkYXJrXCIpO1xuICBjcmVhdGVUaGVtZS5ib2R5Q29sKFwiI2E0YWViYVwiLCBcIiMxRTIyMkFcIik7XG4gIGNyZWF0ZVRoZW1lLnNxdWFyZUJveENvbChcIiMyMzI3MmZcIiwgXCIjMjMyNzJmXCIpO1xuICBjcmVhdGVUaGVtZS5jdXJyZW50TW9kZV9EaXYoXCIjODc4YjkzXCIsIFwiIzJkMzEzOVwiKTtcbiAgY3JlYXRlVGhlbWUuc2Vzc2lvbkFyZWFCRyhcIiMyYTJlMzZcIiwgXCIjMmEyZTM2XCIpO1xuICBjcmVhdGVUaGVtZS5zZXNzaW9uQnRuQ29sKFwiI0U3ODk5MlwiLCBcIiMxRTIyMkFcIiwgXCIjRTc4OTkyXCIpO1xuICBjcmVhdGVUaGVtZS5zZXNzaW9uQXJlYUJHKFwiIzJhMmUzNlwiLCBcIiMyYTJlMzZcIik7XG4gIGNyZWF0ZVRoZW1lLnNlc3Npb25CdG5Db2woXCIjRTc4OTkyXCIsIFwiIzFFMjIyQVwiLCBcIiNFNzg5OTJcIik7XG4gIGNyZWF0ZVRoZW1lLnJlc2V0Q29sKFwiI2E0YWViYVwiLCBcIiMxRTIyMkFcIiwgXCIjNjFhZmVmXCIpO1xuICBjcmVhdGVUaGVtZS5zZXR0aW5nc2J0bkNvbChcIiM4ZGVlYjlcIiwgXCIjMjMyNzJmXCIpO1xuXG4gIGNyZWF0ZVRoZW1lLm1vZGVzUGFnZUNvbChcbiAgICBcIiNhNGFlYmFcIixcbiAgICBcIiMyQzMyM0JcIixcbiAgICBcIiM0YTU0NjBcIixcbiAgICBcIiM0MDQ2NEZcIixcbiAgICBcIiM2MWFmZWZcIixcbiAgICBcIiMyQzMyM0JcIlxuICApO1xuXG4gIGNyZWF0ZVRoZW1lLmFib3V0Q29udGV4dChcIiNDM0M3Q0ZcIiwgXCIjQUFBRUI2XCIpO1xuICBjcmVhdGVUaGVtZS5jaXJjdWxhclN0cm9rZXMoXCIjMUUyMjJBXCIsIFwiIzYxYWZlZlwiLCBcIiM2MWFmZWZcIik7XG5cbiAgY3JlYXRlVGhlbWUuZGFzaFNjb3JlKFwiIzc4N0M4NFwiLCBcIiMxRTIyMkFcIiwgXCIjRkY2RTY3XCIsIFwiIzFFMjIyQVwiLCBcIiMyMzI3MmZcIik7XG4gIGNyZWF0ZVRoZW1lLmxldmVsUHJvZ3Jlc3MoXCIjQTNCRThDXCIsIFwiIzIzMjcyZlwiLCBcIiM3ODdDODRcIiwgXCIjMUUyMjJBXCIpO1xuXG4gIGNyZWF0ZVRoZW1lLnNvdW5kc1NlY3Rpb24oXG4gICAgXCIjRkY2RTY3XCIsXG4gICAgXCIjMUUyMjJBXCIsXG4gICAgXCIjNzg3Qzg0XCIsXG4gICAgXCIjMmEyZTM2XCIsXG4gICAgXCIjMmEyZTM2XCIsXG4gICAgXCIjMUUyMjJBXCJcbiAgKTtcblxuICBjcmVhdGVUaGVtZS5hdXRoX1NlY3Rpb24oXG4gICAgXCIjMjMyNzJGXCIsXG4gICAgXCIjMkQzMTM5XCIsXG4gICAgXCIjQzNDN0NGXCIsXG4gICAgXCIjQzNDN0NGXCIsXG4gICAgXCIjRkY2RTY3XCIsXG4gICAgXCIjMkQzMTM5XCJcbiAgKTtcblxuICBjcmVhdGVfTGlnaHRlclNoYWRlKCk7XG5cbiAgY3JlYXRlVGhlbWUucmV3YXJkc1BhZ2VEaXYoXG4gICAgXCIjMjMyNzJmXCIsXG4gICAgXCIjMjkyZDM1XCIsXG4gICAgXCIjMjMyNzJGXCIsXG4gICAgXCIjYTNiOGVmXCIsXG4gICAgXCIjMmEyZTM2XCIsXG4gICAgXCIjRkY2RTY3XCIsXG4gICAgXCIjMjMyNzJmXCIsXG4gICAgXCIjN2VkNDkxXCIsXG4gICAgXCIjMUUyMjJBXCJcbiAgKTtcbn07XG5cbmV4cG9ydCBjb25zdCB0b2dnbGVUaGVtZSA9ICgpID0+IHtcbiAgdGhlbWVUb2dnbGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICB0aGVtZVRvZ2dsZS5jbGFzc0xpc3QudG9nZ2xlKFwicGgtdG9nZ2xlLXJpZ2h0XCIpO1xuICAgIHdoaWNoVGhlbWUrKztcblxuICAgIHdoaWNoVGhlbWUgJSAyICE9IDAgPyB1c2VEYXJrVGhlbWUoKSA6IHVzZUxpZ2h0VGhlbWUoKTtcbiAgfSk7XG59O1xuXG5kZWZhdWx0TGlnaHQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHVzZUxpZ2h0VGhlbWUpO1xuZGVmYXVsdERhcmsuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHVzZURhcmtUaGVtZSk7XG4iLCJpbXBvcnQgeyB1c2VyU2NvcmUsIHVzZXJUaGVtZSwgdXNlclNvdW5kLCB1c2VyQ2FyZHMgfSBmcm9tIFwiLi4vaW5kZXguanNcIjtcbmltcG9ydCB7IHNob3dSZW1haW5pbmdfR2VtcyB9IGZyb20gXCIuL3Jld2FyZHNQYWdlLmpzXCI7XG5cbmxldCBzY29yZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2NvcmVcIik7IC8vIHNjb3JlIGRpdiBpbiBkYXNoYm9hcmQgcGFnZVxuXG5sZXQgZmlyZWJhc2VDb25maWcgPSB7XG4gIGFwaUtleTogXCJBSXphU3lBazhrZWJPWDhNRHF0WVl5eTdzQWRkNGZzWmE0UjhNMHNcIixcbiAgYXV0aERvbWFpbjogXCJwb21vcmV3YXJkLmZpcmViYXNlYXBwLmNvbVwiLFxuICBwcm9qZWN0SWQ6IFwicG9tb3Jld2FyZFwiLFxuICBzdG9yYWdlQnVja2V0OiBcInBvbW9yZXdhcmQuYXBwc3BvdC5jb21cIixcbiAgbWVzc2FnaW5nU2VuZGVySWQ6IFwiMzE5MjU2NTY1NjY1XCIsXG4gIGFwcElkOiBcIjE6MzE5MjU2NTY1NjY1OndlYjo2MmQ3M2U3ZmIxYTQ5M2Q1MWQ1ZGUwXCIsXG59O1xuXG5maXJlYmFzZS5pbml0aWFsaXplQXBwKGZpcmViYXNlQ29uZmlnKTtcblxuY29uc3QgYXV0aCA9IGZpcmViYXNlLmF1dGgoKTtcblxuY29uc3Qgc2lnblVwID0gKCkgPT4ge1xuICBsZXQgZW1haWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInVzZXJFbWFpbFwiKTtcbiAgbGV0IHBhc3N3b3JkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ1c2VyUGFzc3dvcmRcIik7XG5cbiAgY29uc3QgcHJvbWlzZSA9IGF1dGguY3JlYXRlVXNlcldpdGhFbWFpbEFuZFBhc3N3b3JkKFxuICAgIGVtYWlsLnZhbHVlLFxuICAgIHBhc3N3b3JkLnZhbHVlXG4gICk7XG5cbiAgcHJvbWlzZS5jYXRjaCgoZSkgPT4gYWxlcnQoZS5tZXNzYWdlKSk7XG59O1xuXG5jb25zdCBzaWduSW4gPSAoKSA9PiB7XG4gIGxldCBlbWFpbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidXNlckVtYWlsXCIpO1xuICBsZXQgcGFzc3dvcmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInVzZXJQYXNzd29yZFwiKTtcblxuICBjb25zdCBwcm9taXNlID0gYXV0aC5zaWduSW5XaXRoRW1haWxBbmRQYXNzd29yZChlbWFpbC52YWx1ZSwgcGFzc3dvcmQudmFsdWUpO1xuICBwcm9taXNlLmNhdGNoKChlKSA9PiBhbGVydChlLm1lc3NhZ2UpKTtcbn07XG5cbmNvbnN0IHNpZ25PdXQgPSAoKSA9PiB7XG4gIGF1dGguc2lnbk91dCgpO1xuXG4gIGxldCBlbWFpbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidXNlckVtYWlsXCIpO1xuICBsZXQgcGFzc3dvcmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInVzZXJQYXNzd29yZFwiKTtcblxuICBlbWFpbC52YWx1ZSA9IFwiXCI7XG4gIHBhc3N3b3JkLnZhbHVlID0gXCJcIjtcblxuICBsb2NhdGlvbi5yZWxvYWQoKTtcbn07XG5cbmNvbnN0IHVzZXJfQXZhdGFyID0gKGFjdGlvbikgPT4ge1xuICBsZXQgYXZhdGFyRGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi51c2VyQXZhdGFyX0RpdlwiKTtcbiAgbGV0IGVtYWlsSW5wdXREaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVtYWlsX0lucHV0RGl2XCIpO1xuICBsZXQgcGFzc0lucHV0RGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wYXNzX0lucHV0RGl2XCIpO1xuXG4gIGlmIChhY3Rpb24gPT0gXCJzaG93XCIpIHtcbiAgICBlbWFpbElucHV0RGl2LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICBwYXNzSW5wdXREaXYuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuXG4gICAgYXZhdGFyRGl2LnN0eWxlLmRpc3BsYXkgPSBcImZsZXhcIjtcbiAgfSBlbHNlIHtcbiAgICBhdmF0YXJEaXYuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuXG4gICAgZW1haWxJbnB1dERpdi5zdHlsZS5kaXNwbGF5ID0gXCJmbGV4XCI7XG4gICAgcGFzc0lucHV0RGl2LnN0eWxlLmRpc3BsYXkgPSBcImZsZXhcIjtcbiAgfVxufTtcblxubGV0IHNpZ25VcEJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2lnblVwQnRuXCIpO1xubGV0IHNpZ25JbkJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2lnbkluQnRuXCIpO1xubGV0IHNpZ25PdXRCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNpZ25PdXRCdG5cIik7XG5sZXQgdXNybmFtZV9EaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmF1dGhEaXZfSGVhZGVyXCIpO1xuXG5jb25zdCBjcmVhdGVVc2VyTmFtZV9mcm9tRW1haWwgPSAoZW1haWwpID0+IHtcbiAgbGV0IHJlc3VsdCA9IFwiXCI7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbWFpbC5sZW5ndGg7IGkrKykge1xuICAgIGlmIChlbWFpbFtpXSA9PSBcIkBcIikgYnJlYWs7XG5cbiAgICByZXN1bHQgKz0gZW1haWxbaV07XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbmF1dGgub25BdXRoU3RhdGVDaGFuZ2VkKGZ1bmN0aW9uICh1c2VyKSB7XG4gIGlmICh1c2VyKSB7XG4gICAgbGV0IGVtYWlsID0gdXNlci5lbWFpbDtcbiAgICB1c3JuYW1lX0Rpdi5pbm5lclRleHQgPSBjcmVhdGVVc2VyTmFtZV9mcm9tRW1haWwoZW1haWwpO1xuXG4gICAgc2lnbkluQnRuLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICBzaWduVXBCdG4uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuXG4gICAgdXNlcl9BdmF0YXIoXCJzaG93XCIpO1xuICB9IGVsc2Uge1xuICAgIHVzZXJfQXZhdGFyKFwiaGlkZVwiKTtcbiAgICB1c3JuYW1lX0Rpdi5pbm5lclRleHQgPSBcIkFjY291bnRcIjtcblxuICAgIHNpZ25JbkJ0bi5zdHlsZS5kaXNwbGF5ID0gXCJmbGV4XCI7XG4gICAgc2lnblVwQnRuLnN0eWxlLmRpc3BsYXkgPSBcImZsZXhcIjtcbiAgfVxufSk7XG5cbnNpZ25VcEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBzaWduVXAoKTtcbn0pO1xuXG5zaWduSW5CdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgc2lnbkluKCk7XG59KTtcblxuc2lnbk91dEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBzaWduT3V0KCk7XG5cbiAgLy8gY2xlYXIgcHJldmlvdXMgc2NvcmVcbiAgc2NvcmUuaW5uZXJUZXh0ID0gMDtcbiAgc2hvd1JlbWFpbmluZ19HZW1zKDApO1xufSk7XG5cbi8vIGJ1dHRvbiBjbGljayBhY3Rpb25zIHVzZXJzdGF0dXMgYnV0dG9uXG5cbmxldCB1c2VyU3RhdHVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi51c2VyU3RhdHVzXCIpO1xubGV0IGF1dGhfRGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hdXRoX0RpdlwiKTtcblxuY29uc3Qgc2V0dGluZ3NQYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zZXR0aW5nc1BhZ2VcIik7XG5jb25zdCBkYXNoYm9hcmRQYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5kYXNoYm9hcmRQYWdlXCIpO1xuY29uc3QgbW9kZXNEaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGVzRGl2XCIpO1xuY29uc3QgYWJvdXRQYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hYm91dFBhZ2VcIik7XG5jb25zdCByZXNldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucmVzZXRcIik7XG5jb25zdCBzcXVhcmVCb3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNxdWFyZUJveFwiKTtcbmNvbnN0IHNlc3Npb25CdG5zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zZXNzaW9uQnRuc1wiKTtcbmNvbnN0IG1haW5GbGV4ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5mbGV4TWFpblwiKTtcbmNvbnN0IHJld2FyZHNQYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5yZXdhcmRzUGFnZVwiKTtcblxuY29uc3QganVtcHRvX1VzZXJTdGF0dXNQYWdlID0gKCkgPT4ge1xuICBbXG4gICAgc2V0dGluZ3NQYWdlLFxuICAgIGFib3V0UGFnZSxcbiAgICBzcXVhcmVCb3gsXG4gICAgc2Vzc2lvbkJ0bnMsXG4gICAgcmVzZXQsXG4gICAgZGFzaGJvYXJkUGFnZSxcbiAgICBtYWluRmxleCxcbiAgICBtb2Rlc0RpdixcbiAgICByZXdhcmRzUGFnZSxcbiAgXS5mb3JFYWNoKCh0ZW1wKSA9PiB7XG4gICAgdGVtcC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gIH0pO1xuXG4gIGF1dGhfRGl2LnN0eWxlLmRpc3BsYXkgPSBcImZsZXhcIjtcbn07XG5cbnVzZXJTdGF0dXMuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAganVtcHRvX1VzZXJTdGF0dXNQYWdlKCk7XG59KTtcblxuZXhwb3J0IGNvbnN0IHNhdmVVc2VyRGF0YV90b0RCID0gKCkgPT4ge1xuICBhdXRoLm9uQXV0aFN0YXRlQ2hhbmdlZChmdW5jdGlvbiAodXNlcikge1xuICAgIGlmICh1c2VyKSB7XG4gICAgICBsZXQgdXNlcl9OYW1lID0gY3JlYXRlVXNlck5hbWVfZnJvbUVtYWlsKHVzZXIuZW1haWwpO1xuXG4gICAgICBmaXJlYmFzZVxuICAgICAgICAuZGF0YWJhc2UoKVxuICAgICAgICAucmVmKGB1c2Vycy8ke3VzZXJfTmFtZX1gKVxuICAgICAgICAuc2V0KHtcbiAgICAgICAgICBzY29yZTogYCR7dXNlclNjb3JlfWAsXG4gICAgICAgICAgdGhlbWU6IGAke3VzZXJUaGVtZX1gLFxuICAgICAgICAgIHNvdW5kOiBgJHt1c2VyU291bmR9YCxcbiAgICAgICAgICBjYXJkczogYCR7dXNlckNhcmRzfWAsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG59O1xuXG5pbXBvcnQgeyBzZXRMZXZlbF9Qcm9ncmVzcyB9IGZyb20gXCIuL21pc2NGdW5jc1wiO1xuXG5pbXBvcnQgeyB1c2VMaWdodFRoZW1lLCB1c2VEYXJrVGhlbWUgfSBmcm9tIFwiLi90aGVtZXMuanNcIjtcblxuZXhwb3J0IGNvbnN0IGdldFVzZXJEYXRhX2Zyb21EQiA9ICgpID0+IHtcbiAgYXV0aC5vbkF1dGhTdGF0ZUNoYW5nZWQoZnVuY3Rpb24gKHVzZXIpIHtcbiAgICBpZiAodXNlcikge1xuICAgICAgbGV0IHVzZXJfTmFtZSA9IGNyZWF0ZVVzZXJOYW1lX2Zyb21FbWFpbCh1c2VyLmVtYWlsKTtcblxuICAgICAgbGV0IHJlZiA9IGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKFwidXNlcnNcIik7XG4gICAgICByZWYuY2hpbGQodXNlcl9OYW1lKS5vbihcInZhbHVlXCIsIGZ1bmN0aW9uIChzbmFwc2hvdCkge1xuICAgICAgICAvLyBzeW5jIHRoZW1lXG4gICAgICAgIHVzZXJUaGVtZSA9IHNuYXBzaG90LnZhbCgpLnRoZW1lO1xuICAgICAgICB1c2VyVGhlbWUgPT0gXCJsaWdodFwiID8gdXNlTGlnaHRUaGVtZSgpIDogdXNlRGFya1RoZW1lKCk7XG5cbiAgICAgICAgLy8gc3luYyBzY29yZSBhbmQgbHZsXG4gICAgICAgIHVzZXJTY29yZSA9IHNuYXBzaG90LnZhbCgpLnNjb3JlO1xuICAgICAgICBzaG93UmVtYWluaW5nX0dlbXModXNlclNjb3JlKTtcblxuICAgICAgICAvLyBzeW5jIHNhdmVkIHVzZXJzb3VuZCFcbiAgICAgICAgdXNlclNvdW5kID0gc25hcHNob3QudmFsKCkuc291bmQ7XG5cbiAgICAgICAgLy8gc3luYyBuLm8gb2YgcHVyY2hhc2VkIHVzZXIgY2FyZHNcblxuICAgICAgICB1c2VyQ2FyZHMgPSBzbmFwc2hvdC52YWwoKS5jYXJkcyA/IHNuYXBzaG90LnZhbCgpLmNhcmRzIDogMDtcbiAgICAgICAgc2NvcmUuaW5uZXJUZXh0ID1cbiAgICAgICAgICBwYXJzZUludChgJHt1c2VyU2NvcmV9YCkgKyBwYXJzZUludChgJHt1c2VyQ2FyZHN9YCAqIDIwMDApO1xuICAgICAgICBzZXRMZXZlbF9Qcm9ncmVzcygpO1xuICAgICAgfSk7XG4gICAgfVxuICB9KTtcbn07XG4iLCJpbXBvcnQgeyB0aW1lclNvdW5kIH0gZnJvbSBcIi4vbWlzY0Z1bmNzXCI7XG5pbXBvcnQgeyB1c2VyU291bmQgfSBmcm9tIFwiLi4vaW5kZXhcIjtcblxuLy8gdGltZXIgc291bmRzIHNlY3Rpb25cblxubGV0IHNvdW5kX1NldHRpbmdzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zb3VuZF9TZXR0aW5nc1wiKTtcblxuY29uc3QgYWRkX1RpbWVyU291bmQgPSAoYXVkaW9fZmlsZSkgPT4ge1xuICBsZXQgYmVlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG5cbiAgYmVlLmNsYXNzTGlzdC5hZGQoXCJ0aW1lcl9hdWRpb1wiKTtcbiAgYmVlLnRleHRDb250ZW50ID0gYXVkaW9fZmlsZTtcblxuICBzb3VuZF9TZXR0aW5ncy5hcHBlbmRDaGlsZChiZWUpO1xufTtcblxuZXhwb3J0IGNvbnN0IGFsbF9zb3VuZHMgPSBbXG4gIFwiY29jR2FtZVwiLFxuICBcInNpcmVuXCIsXG4gIFwieW9vb1wiLFxuICBcInBpa2FjaHV1XCIsXG4gIFwiYW5ncnlCaXJkXCIsXG4gIFwiZ251UmVsb2FkXCIsXG4gIFwicGlhbm9cIixcbiAgXCJ2YXNjb19zaG90XCIsXG4gIFwicGl6emFyb1wiLFxuXTtcblxuZXhwb3J0IGNvbnN0IGFkZF9BdWRpb3MgPSAoKSA9PiB7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYWxsX3NvdW5kcy5sZW5ndGg7IGkrKykgYWRkX1RpbWVyU291bmQoYWxsX3NvdW5kc1tpXSk7XG59O1xuXG5hZGRfQXVkaW9zKCk7XG5cbmxldCBtcDNmaWxlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIudGltZXJfYXVkaW9cIik7XG5cbmltcG9ydCB7IHNhdmVVc2VyRGF0YV90b0RCIH0gZnJvbSBcIi4vdXNlckF1dGguanNcIjtcblxubXAzZmlsZXMuZm9yRWFjaCgodGVtcCkgPT4ge1xuICB0ZW1wLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW92ZXJcIiwgKCkgPT4ge1xuICAgIHRlbXAuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCIjNTQ1RTZBXCI7XG4gICAgdGVtcC5zdHlsZS5jdXJzb3IgPSBcInBvaW50ZXJcIjtcbiAgICB0ZW1wLnN0eWxlLmNvbG9yID0gXCJ3aGl0ZVwiO1xuICB9KTtcblxuICB0ZW1wLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW91dFwiLCAoKSA9PiB7XG4gICAgdGVtcC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcIiNmYWZhZmFcIjtcbiAgICB0ZW1wLnN0eWxlLmN1cnNvciA9IFwiZGVmYXVsdFwiO1xuICAgIHRlbXAuc3R5bGUuY29sb3IgPSBcIiM1NDVFNkFcIjtcbiAgfSk7XG5cbiAgdGVtcC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYWxsX3NvdW5kcy5sZW5ndGg7IGkrKykge1xuICAgICAgbXAzZmlsZXNbaV0uc3R5bGUuYm9yZGVyID0gXCJub25lXCI7XG4gICAgICBtcDNmaWxlc1tpXS5zdHlsZS5jb2xvciA9IFwiIzgyODY4RVwiO1xuICAgICAgbXAzZmlsZXNbaV0uc3R5bGUudGV4dERlY29yYXRpb24gPSBcImxpbmUtdGhyb3VnaFwiO1xuICAgIH1cbiAgICBsZXQgYWN0aXZlYmcgPSBcIiM1NDVFNkFcIjtcblxuICAgIHRlbXAuc3R5bGUudGV4dERlY29yYXRpb24gPSBcIm5vbmVcIjtcbiAgICB0ZW1wLnN0eWxlLmNvbG9yID0gXCIjNTQ1RTZBXCI7XG4gICAgdGVtcC5zdHlsZS5ib3JkZXIgPSBgNXB4IGRvdHRlZCAke2FjdGl2ZWJnfWA7XG4gICAgdGVtcC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcInBpbmtcIjtcblxuICAgIC8vIHNhdmUgc291bmRcblxuICAgIHVzZXJTb3VuZCA9IHRlbXAuaW5uZXJUZXh0O1xuICAgIHNhdmVVc2VyRGF0YV90b0RCKCk7XG5cbiAgICBsZXQgZGluZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZGluZ2RpbmdcIik7XG4gICAgZGluZy5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgYC4vYXNzZXRzL3NvdW5kcy8ke3VzZXJTb3VuZH0ubXAzYCk7XG5cbiAgICB0aW1lclNvdW5kKCk7XG4gIH0pO1xufSk7XG4iLCJpbXBvcnQgeyB1c2VyU2NvcmUsIHVzZXJUaGVtZSwgdXNlclNvdW5kLCB0b3RhbFRpbWUsIHBvbW9UaW1lIH0gZnJvbSBcIi4uL2luZGV4XCI7XG5pbXBvcnQgeyBtb2RlQ3VycmVudFRpbWUsIHNjb3JlIH0gZnJvbSBcIi4vZGl2U2VsZWN0b3JzXCI7XG5cbmltcG9ydCB7fSBmcm9tIFwiLi9zZXR0aW5nc1wiO1xuXG5pbXBvcnQgeyBzYXZlVXNlckRhdGFfdG9EQiB9IGZyb20gXCIuL3VzZXJBdXRoLmpzXCI7XG5cbmxldCBpbm5lckNpcmNsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudGltZXJUZXh0XCIpO1xuXG4vLyB0aW1lciBzb3VuZCBzdHVmZlxubGV0IHRpY2tTb3VuZCA9IFwiLi9hc3NldHMvc291bmRzL3RpY2subXAzXCI7XG5cbmNvbnN0IHRpbWVyU291bmQgPSAoKSA9PiB7XG4gIHNhdmVVc2VyRGF0YV90b0RCKCk7XG5cbiAgbGV0IGIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2RpbmdkaW5nXCIpO1xuICBiLnNldEF0dHJpYnV0ZShcInNyY1wiLCBgLi9hc3NldHMvc291bmRzLyR7dXNlclNvdW5kfS5tcDNgKTtcblxuICBiLnBsYXkoKTtcbn07XG5cbmNvbnN0IHBsYXlUaWNrU291bmQgPSAoKSA9PiB7XG4gIGNvbnN0IGF1ZGlvID0gbmV3IEF1ZGlvKHRpY2tTb3VuZCk7XG4gIGF1ZGlvLnBsYXkoKTtcbn07XG5cbi8vIGRpc3BsYXlzIHRpbWVyJ3MgdGV4dCAoIHRoZSBhY3R1YWwgdGltZSBnb2luZyBvbiApXG5jb25zdCBzZXRCb3hUZXh0ID0gKG1pbiwgc2VjKSA9PiB7XG4gIGxldCB0ZW1wO1xuXG4gIGlmIChtaW4gPCAxMCkgdGVtcCA9IGAwJHttaW59IDogJHtzZWN9YDtcbiAgZWxzZSBpZiAoc2VjIDwgMTApIHRlbXAgPSBgJHttaW59IDogMCR7c2VjfWA7XG5cbiAgdGVtcCA9IGAke21pbn0gOiAke3NlY31gO1xuICBpbm5lckNpcmNsZS50ZXh0Q29udGVudCA9IHRlbXA7XG59O1xuXG4vLyBmb3Igd3JvbmcgYnRuIGNsaWNrXG5jb25zdCBkaXNwbGF5RXJyb3IgPSAodGV4dCkgPT4gKGlubmVyQ2lyY2xlLnRleHRDb250ZW50ID0gdGV4dCk7XG5jb25zdCBzaG93V2FybmluZ3MgPSAoKSA9PiB7XG4gIC8qIHVzZSBsYXRlciAqL1xufTtcblxuY29uc3QgYWRkVG9ydHVyZUFuaW1hdGlvbiA9ICgpID0+IHtcbiAgaW5uZXJDaXJjbGUuc3R5bGUuYmFja2dyb3VuZEltYWdlID1cbiAgICBcInVybCgnaHR0cHM6Ly9tZWRpYTEudGVub3IuY29tL2ltYWdlcy81ZmUzNWJlYzFjODBhODgwYmY1OWFlMzJhOTcxNmFjZS90ZW5vci5naWY/aXRlbWlkPTg5NTMwMzgnKVwiO1xuXG4gIGRpc3BsYXlFcnJvcihcIj46KFwiKTtcbn07XG5cbmNvbnN0IHN0b3BUb3J0dXJlQW5pbWF0aW9uID0gKCkgPT4ge1xuICBpbm5lckNpcmNsZS5zdHlsZS5hbmltYXRpb24gPSBcIiBub25lXCI7XG4gIGlubmVyQ2lyY2xlLnN0eWxlLmJhY2tncm91bmRJbWFnZSA9IFwibm9uZVwiO1xufTtcblxuY29uc3QgYWRkU2hha2VBbmltYXRpb24gPSAoKSA9PiB7XG4gIGxldCBzdmdDaXJjID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcInN2Z1wiKTtcbiAgc3ZnQ2lyYy5zdHlsZS5hbmltYXRpb24gPSBcIndvYmJsZSA1c1wiO1xufTtcblxuZXhwb3J0IGNvbnN0IHNldExldmVsX1Byb2dyZXNzID0gKCkgPT4ge1xuICBsZXQgc2NvcmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNjb3JlXCIpO1xuXG4gIGxldCB1c3JTY29yZSA9IHBhcnNlSW50KHNjb3JlLnRleHRDb250ZW50KTtcbiAgbGV0IHBlcmNlbnQgPSAodXNyU2NvcmUgLyA1MDAwMCkgKiAxMDA7XG4gIGxldCBwcm9ncmVzc0NpcmNsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2NvcmVJbm5lckNpcmNsZVwiKTtcbiAgbGV0IHJhZGl1cyA9IHByb2dyZXNzQ2lyY2xlLnIuYmFzZVZhbC52YWx1ZTtcblxuICBsZXQgY2lyY3VtID0gcmFkaXVzICogMiAqIE1hdGguUEk7XG4gIHByb2dyZXNzQ2lyY2xlLnN0eWxlLnN0cm9rZURhc2hhcnJheSA9IGNpcmN1bTtcbiAgcHJvZ3Jlc3NDaXJjbGUuc3R5bGUuc3Ryb2tlRGFzaG9mZnNldCA9IGNpcmN1bSAtIChwZXJjZW50IC8gMTAwKSAqIGNpcmN1bTtcbn07XG5cbi8qIHNob3cgbW9kZSdzIHRpbWUgdmFsdWUgKi9cblxuY29uc3QgZGlzcGxheU1vZGVUaW1lID0gKG1pbikgPT4ge1xuICBtb2RlQ3VycmVudFRpbWUudGV4dENvbnRlbnQgPSBtaW4gPCAxMCA/IGAwJHttaW59IDogMDBgIDogYCR7bWlufSA6IDAwYDtcbn07XG5cbmV4cG9ydCBjb25zdCBzZXRDaXJjbGVQcm9ncmVzcyA9ICgpID0+IHtcbiAgLy8gZ2V0IGN1cnJlbnQgVGltZSBwcm9ncmVzcyBpbiAlXG4gIGxldCBwcm9fVGltZSA9IHBvbW9UaW1lIC8gNjA7XG4gIGxldCBwZXJjZW50ID0gKCh0b3RhbFRpbWUgLSBwcm9fVGltZSkgLyB0b3RhbFRpbWUpICogMTAwO1xuXG4gIGxldCBwcm9ncmVzc0NpcmNsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaW5uZXJDXCIpO1xuICBsZXQgcmFkaXVzID0gcHJvZ3Jlc3NDaXJjbGUuci5iYXNlVmFsLnZhbHVlO1xuXG4gIGxldCBjaXJjdW0gPSByYWRpdXMgKiAyICogTWF0aC5QSTtcbiAgcHJvZ3Jlc3NDaXJjbGUuc3R5bGUuc3Ryb2tlRGFzaGFycmF5ID0gY2lyY3VtO1xuICBwcm9ncmVzc0NpcmNsZS5zdHlsZS5zdHJva2VEYXNob2Zmc2V0ID0gY2lyY3VtIC0gKHBlcmNlbnQgLyAxMDApICogY2lyY3VtO1xufTtcblxuZnVuY3Rpb24gYWRqdXN0Q29sb3IoY29sb3IsIGFtb3VudCkge1xuICByZXR1cm4gKFxuICAgIFwiI1wiICtcbiAgICBjb2xvclxuICAgICAgLnJlcGxhY2UoL14jLywgXCJcIilcbiAgICAgIC5yZXBsYWNlKC8uLi9nLCAoY29sb3IpID0+XG4gICAgICAgIChcbiAgICAgICAgICBcIjBcIiArXG4gICAgICAgICAgTWF0aC5taW4oMjU1LCBNYXRoLm1heCgwLCBwYXJzZUludChjb2xvciwgMTYpICsgYW1vdW50KSkudG9TdHJpbmcoMTYpXG4gICAgICAgICkuc3Vic3RyKC0yKVxuICAgICAgKVxuICApO1xufVxuXG5leHBvcnQgY29uc3QgY3JlYXRlX0xpZ2h0ZXJTaGFkZSA9ICgpID0+IHtcbiAgbGV0IGIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiYm9keVwiKTtcbiAgbGV0IHRtcEJnID0gYi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3I7XG5cbiAgbGV0IHJnYjJoZXggPSAoYykgPT5cbiAgICBcIiNcIiArIGMubWF0Y2goL1xcZCsvZykubWFwKCh4KSA9PiAoK3gpLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCAwKSkuam9pbmBgO1xuICBsZXQgZmluYWxDb2wgPSByZ2IyaGV4KHRtcEJnKTtcblxuICBsZXQgYWJvdXRDYXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hYm91dENhcHRpb25cIik7XG5cbiAgaWYgKHVzZXJUaGVtZSA9PSBcImxpZ2h0XCIpIHtcbiAgICBhYm91dENhcHRpb24uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gYWRqdXN0Q29sb3IoZmluYWxDb2wsIC03KTtcbiAgICByZXR1cm47XG4gIH1cblxuICBhYm91dENhcHRpb24uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gYWRqdXN0Q29sb3IoZmluYWxDb2wsIDEwKTtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRfbG9hZGluZ0FuaW1hdGlvbiA9IChuKSA9PiB7XG4gIG4uYW5pbWF0ZShbeyB0cmFuc2Zvcm06IFwicm90YXRlKDBkZWcpXCIgfSwgeyB0cmFuc2Zvcm06IFwicm90YXRlKDM2MGRlZylcIiB9XSwge1xuICAgIGR1cmF0aW9uOiAxMDAwLFxuICAgIGl0ZXJhdGlvbnM6IDEsXG4gIH0pO1xufTtcblxuZXhwb3J0IHtcbiAgdGltZXJTb3VuZCxcbiAgc2V0Qm94VGV4dCxcbiAgZGlzcGxheUVycm9yLFxuICBzaG93V2FybmluZ3MsXG4gIGFkZFRvcnR1cmVBbmltYXRpb24sXG4gIHN0b3BUb3J0dXJlQW5pbWF0aW9uLFxuICBhZGRTaGFrZUFuaW1hdGlvbixcbiAgcGxheVRpY2tTb3VuZCxcbiAgZGlzcGxheU1vZGVUaW1lLFxufTtcbiIsImltcG9ydCB7XG4gIGN1cnJlbnRDbGljayxcbiAgcG9tb1RpbWUsXG4gIHNhdmVNaW4sXG4gIHN0YXJ0UG9tb2Rvcm8sXG4gIHRpbWVyLFxuICB0b3RhbFRpbWUsXG4gIHVzZXJNb2RlLFxuICB1cGRhdGVfQ3VycmVudE1vZGUsXG59IGZyb20gXCIuLi9pbmRleFwiO1xuXG5pbXBvcnQge1xuICBhYm91dEJ0bixcbiAgYWJvdXRQYWdlLFxuICBhdXRvbWF0aWNNb2RlLFxuICBicmVha01vZGUsXG4gIGRlY3JlYXNlVGltZUFycm93LFxuICBkZWZhdWx0TW9kZSxcbiAgaG9tZVBhZ2UsXG4gIGluY3JlYXNlVGltZUFycm93LFxuICBtZW51TGlua190b2dnbGUsXG4gIG1vZGVzRGl2LFxuICBtb2Rlc0xpbmssXG4gIHBhdXNlLFxuICByZXNldCxcbiAgc2F2ZUJ0bkZMZXgsXG4gIHNlc3Npb25CdG5zLFxuICBzZXR0aW5nc0J0bixcbiAgc2V0dGluZ3NQYWdlLFxuICBzcXVhcmVCb3gsXG4gIHN0YXJ0LFxuICBkYXNoYm9hcmRMaW5rLFxuICBkYXNoYm9hcmRQYWdlLFxuICBtYWluRmxleCxcbiAgdGhlbWVUb2dnbGUsXG59IGZyb20gXCIuL2RpdlNlbGVjdG9yc1wiO1xuXG5pbXBvcnQge1xuICBhZGRUb3J0dXJlQW5pbWF0aW9uLFxuICBkaXNwbGF5TW9kZVRpbWUsXG4gIHBsYXlUaWNrU291bmQsXG4gIHNldEJveFRleHQsXG4gIHN0b3BUb3J0dXJlQW5pbWF0aW9uLFxuICBzZXRDaXJjbGVQcm9ncmVzcyxcbn0gZnJvbSBcIi4vbWlzY0Z1bmNzXCI7XG5cbmltcG9ydCB7IGNsZWFyX0dhbGxlcnkgfSBmcm9tIFwiLi9yZXdhcmRzUGFnZS5qc1wiO1xuXG5sZXQgYXV0aF9EaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmF1dGhfRGl2XCIpOyAvLyB0byBoaWRlIGF1dGhfZGl2IHdoZW4gb3RoZXIgbmF2bGlua3MgYXJlIGNsaWNrZWRcbmxldCByZXdhcmRzTGluayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucmV3YXJkc0xpbmtcIik7XG5sZXQgcmV3YXJkc1BhZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnJld2FyZHNQYWdlXCIpO1xuXG4vLyBTZXNzaW9uIGJ1dHRvbiBjbGljayBhY3Rpb25zXG5cbltzdGFydCwgcmVzZXRdLmZvckVhY2goKHRlbXApID0+IHtcbiAgdGVtcC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIHN0b3BUb3J0dXJlQW5pbWF0aW9uKCk7XG5cbiAgICAvLyByZXNldHMgdGltZSB0byBkZWZhdWx0ICggZnJlZXplcyBpdCApXG5cbiAgICBpZiAodGVtcC5jbGFzc05hbWUgPT09IFwicmVzZXRcIikge1xuICAgICAgY3VycmVudENsaWNrID0gXCJyZXNldFwiO1xuICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lcik7XG5cbiAgICAgIHBvbW9UaW1lID0gdG90YWxUaW1lICogNjA7XG4gICAgICBzZXRCb3hUZXh0KHRvdGFsVGltZSwgMCk7XG4gICAgICBzZXRDaXJjbGVQcm9ncmVzcygwKTtcblxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIHJlc3RhcnRzIHRpbWVcbiAgICBlbHNlIHtcbiAgICAgIGN1cnJlbnRDbGljayA9IFwic3RhcnRcIjtcblxuICAgICAgcGxheVRpY2tTb3VuZCgpO1xuICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lcik7XG5cbiAgICAgIHN0YXJ0UG9tb2Rvcm8oKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gIH0pO1xufSk7XG5cbmxldCBwYXVzZU9yUmVzdW1lID0gMDtcblxuY29uc3QgcGF1c2VUaW1lciA9ICgpID0+IHtcbiAgaWYgKHBvbW9UaW1lID09PSB0b3RhbFRpbWUgKiA2MCB8fCBwb21vVGltZSA9PT0gMCkgYWRkVG9ydHVyZUFuaW1hdGlvbigpO1xuXG4gIGN1cnJlbnRDbGljayA9IFwicGF1c2VcIjtcbiAgc2F2ZU1pbiA9IHBvbW9UaW1lO1xuICBjbGVhckludGVydmFsKHRpbWVyKTtcblxuICBjb25zdCBtaW4gPSBNYXRoLmZsb29yKHNhdmVNaW4gLyA2MCk7XG4gIGxldCBzZWMgPSBzYXZlTWluICUgNjA7XG5cbiAgc2V0Qm94VGV4dChtaW4sIHNlYyk7XG59O1xuXG5jb25zdCByZXN1bWVUaW1lciA9ICgpID0+IHtcbiAgaWYgKHBvbW9UaW1lID09PSB0b3RhbFRpbWUgKiA2MCB8fCBwb21vVGltZSA9PT0gMCkgYWRkVG9ydHVyZUFuaW1hdGlvbigpO1xuICBjdXJyZW50Q2xpY2sgPSBcInBhdXNlXCI7XG5cbiAgaWYgKHBvbW9UaW1lICE9IHRvdGFsVGltZSAqIDYwKSBzdGFydFBvbW9kb3JvKCk7XG59O1xuXG5wYXVzZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBwYXVzZU9yUmVzdW1lKys7XG4gIGN1cnJlbnRDbGljayA9IHBhdXNlT3JSZXN1bWUgJSAyID09IDAgPyBcInJlc3VtZVwiIDogXCJwYXVzZVwiO1xuICBjdXJyZW50Q2xpY2sgPT0gXCJwYXVzZVwiID8gcGF1c2VUaW1lcigpIDogcmVzdW1lVGltZXIoKTtcbn0pO1xuXG4vKiBzZXR0aW5ncyAqL1xuc2V0dGluZ3NCdG4uYWRkRXZlbnRMaXN0ZW5lcihcbiAgXCJtb3VzZW92ZXJcIixcbiAgKCkgPT4gKHNldHRpbmdzQnRuLnN0eWxlLnRleHREZWNvcmF0aW9uID0gXCJ1bmRlcmxpbmVcIilcbik7XG5zZXR0aW5nc0J0bi5hZGRFdmVudExpc3RlbmVyKFxuICBcIm1vdXNlb3V0XCIsXG4gICgpID0+IChzZXR0aW5nc0J0bi5zdHlsZS50ZXh0RGVjb3JhdGlvbiA9IFwibm9uZVwiKVxuKTtcblxuLyogbmF2bGlua3MgYWN0aW9ucyovXG5cbnNldHRpbmdzQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIFtcbiAgICBzcXVhcmVCb3gsXG4gICAgc2Vzc2lvbkJ0bnMsXG4gICAgcmVzZXQsXG4gICAgYWJvdXRQYWdlLFxuICAgIG1vZGVzRGl2LFxuICAgIGRhc2hib2FyZFBhZ2UsXG4gICAgbWFpbkZsZXgsXG4gICAgYXV0aF9EaXYsXG4gICAgcmV3YXJkc1BhZ2UsXG4gIF0uZm9yRWFjaCgodGVtcCkgPT4gKHRlbXAuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiKSk7XG4gIHNldHRpbmdzUGFnZS5zdHlsZS5kaXNwbGF5ID0gXCJmbGV4XCI7XG5cbiAgY2xlYXJfR2FsbGVyeSgpO1xufSk7XG5cbi8qIEhvbWUgUGFnZSAqL1xuY29uc3QganVtcFRvSG9tZVBhZ2UgPSAoKSA9PiB7XG4gIFtzcXVhcmVCb3gsIHNlc3Npb25CdG5zLCByZXNldCwgbWFpbkZsZXhdLmZvckVhY2goKHRlbXApID0+IHtcbiAgICB0ZW1wLnN0eWxlLmRpc3BsYXkgPSBcIlwiO1xuICB9KTtcbiAgW1xuICAgIHNldHRpbmdzUGFnZSxcbiAgICBhYm91dFBhZ2UsXG4gICAgbW9kZXNEaXYsXG4gICAgZGFzaGJvYXJkUGFnZSxcbiAgICBhdXRoX0RpdixcbiAgICByZXdhcmRzUGFnZSxcbiAgXS5mb3JFYWNoKCh0ZW1wKSA9PiAodGVtcC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCIpKTtcblxuICBjbGVhcl9HYWxsZXJ5KCk7XG59O1xuXG5jb25zdCBqdW1wdG9BYm91dFBhZ2UgPSAoKSA9PiB7XG4gIFtcbiAgICBzcXVhcmVCb3gsXG4gICAgc2Vzc2lvbkJ0bnMsXG4gICAgcmVzZXQsXG4gICAgc2V0dGluZ3NQYWdlLFxuICAgIG1vZGVzRGl2LFxuICAgIGRhc2hib2FyZFBhZ2UsXG4gICAgbWFpbkZsZXgsXG4gICAgYXV0aF9EaXYsXG4gICAgcmV3YXJkc1BhZ2UsXG4gIF0uZm9yRWFjaCgodGVtcCkgPT4ge1xuICAgIHRlbXAuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICB9KTtcbiAgYWJvdXRQYWdlLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG5cbiAgY2xlYXJfR2FsbGVyeSgpO1xufTtcblxuY29uc3QganVtcHRvTW9kZXNQYWdlID0gKCkgPT4ge1xuICBbXG4gICAgc2V0dGluZ3NQYWdlLFxuICAgIGFib3V0UGFnZSxcbiAgICBzcXVhcmVCb3gsXG4gICAgc2Vzc2lvbkJ0bnMsXG4gICAgcmVzZXQsXG4gICAgZGFzaGJvYXJkUGFnZSxcbiAgICBtYWluRmxleCxcbiAgICBhdXRoX0RpdixcbiAgICByZXdhcmRzUGFnZSxcbiAgXS5mb3JFYWNoKCh0ZW1wKSA9PiB7XG4gICAgdGVtcC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gIH0pO1xuICBtb2Rlc0Rpdi5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuXG4gIGNsZWFyX0dhbGxlcnkoKTtcbn07XG5cbmNvbnN0IGp1bXB0b0Rhc2hCb2FyZCA9ICgpID0+IHtcbiAgW1xuICAgIHNxdWFyZUJveCxcbiAgICBzZXNzaW9uQnRucyxcbiAgICByZXNldCxcbiAgICBzZXR0aW5nc1BhZ2UsXG4gICAgbW9kZXNEaXYsXG4gICAgYWJvdXRQYWdlLFxuICAgIG1haW5GbGV4LFxuICAgIGF1dGhfRGl2LFxuICAgIHJld2FyZHNQYWdlLFxuICBdLmZvckVhY2goKHRlbXApID0+IHtcbiAgICB0ZW1wLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgfSk7XG4gIGRhc2hib2FyZFBhZ2Uuc3R5bGUuZGlzcGxheSA9IFwiZ3JpZFwiO1xuXG4gIGNsZWFyX0dhbGxlcnkoKTtcbn07XG5cbmNvbnN0IGp1bXB0b1Jld2FyZHNQYWdlID0gKCkgPT4ge1xuICBbXG4gICAgc3F1YXJlQm94LFxuICAgIHNlc3Npb25CdG5zLFxuICAgIHJlc2V0LFxuICAgIHNldHRpbmdzUGFnZSxcbiAgICBtb2Rlc0RpdixcbiAgICBhYm91dFBhZ2UsXG4gICAgbWFpbkZsZXgsXG4gICAgYXV0aF9EaXYsXG4gICAgZGFzaGJvYXJkUGFnZSxcbiAgXS5mb3JFYWNoKCh0ZW1wKSA9PiB7XG4gICAgdGVtcC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gIH0pO1xuICByZXdhcmRzUGFnZS5zdHlsZS5kaXNwbGF5ID0gXCJncmlkXCI7XG5cbiAgY2xlYXJfR2FsbGVyeSgpO1xufTtcblxuaG9tZVBhZ2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IGp1bXBUb0hvbWVQYWdlKCkpO1xuYWJvdXRCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IGp1bXB0b0Fib3V0UGFnZSgpKTtcbm1vZGVzTGluay5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ganVtcHRvTW9kZXNQYWdlKCkpO1xuZGFzaGJvYXJkTGluay5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ganVtcHRvRGFzaEJvYXJkKCkpO1xucmV3YXJkc0xpbmsuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IGp1bXB0b1Jld2FyZHNQYWdlKCkpO1xuXG5pbmNyZWFzZVRpbWVBcnJvdy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICB0b3RhbFRpbWUrKztcbiAgZGlzcGxheU1vZGVUaW1lKHRvdGFsVGltZSk7XG4gIHNldEJveFRleHQodG90YWxUaW1lLCAwKTtcbn0pO1xuXG5kZWNyZWFzZVRpbWVBcnJvdy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBpZiAodG90YWxUaW1lID4gMSkge1xuICAgIHRvdGFsVGltZS0tO1xuICAgIGRpc3BsYXlNb2RlVGltZSh0b3RhbFRpbWUpO1xuICAgIHNldEJveFRleHQodG90YWxUaW1lLCAwKTtcbiAgfVxufSk7XG5cbmRlZmF1bHRNb2RlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIFticmVha01vZGUsIGF1dG9tYXRpY01vZGVdLmZvckVhY2goKHRlbXApID0+IHtcbiAgICB0ZW1wLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwiIzM2NDA0Y1wiO1xuICB9KTtcblxuICB0b3RhbFRpbWUgPSAyNTtcbiAgZGlzcGxheU1vZGVUaW1lKHRvdGFsVGltZSk7XG5cbiAgZGVmYXVsdE1vZGUuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCIjNGE1NDYwXCI7XG5cbiAgdXNlck1vZGUgPSBcImRlZmF1bHRcIjtcbiAgdXBkYXRlX0N1cnJlbnRNb2RlKCk7XG59KTtcblxuYnJlYWtNb2RlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIFtkZWZhdWx0TW9kZSwgYXV0b21hdGljTW9kZV0uZm9yRWFjaCgodGVtcCkgPT4ge1xuICAgIHRlbXAuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCIjMzY0MDRjXCI7XG4gIH0pO1xuXG4gIHRvdGFsVGltZSA9IDU7XG4gIGRpc3BsYXlNb2RlVGltZSh0b3RhbFRpbWUpO1xuXG4gIGJyZWFrTW9kZS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcIiM0YTU0NjBcIjtcblxuICB1c2VyTW9kZSA9IFwiYnJlYWtcIjtcbiAgdXBkYXRlX0N1cnJlbnRNb2RlKCk7XG59KTtcblxuYXV0b21hdGljTW9kZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBbYnJlYWtNb2RlLCBkZWZhdWx0TW9kZV0uZm9yRWFjaCgodGVtcCkgPT4ge1xuICAgIHRlbXAuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCIjMzY0MDRjXCI7XG4gIH0pO1xuXG4gIHRvdGFsVGltZSA9IDI1O1xuICBkaXNwbGF5TW9kZVRpbWUodG90YWxUaW1lKTtcbiAgYXV0b21hdGljTW9kZS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcIiM0YTU0NjBcIjtcblxuICB1c2VyTW9kZSA9IFwiYXV0b21hdGljXCI7XG4gIGFsZXJ0KFwiaW4gcHJvZ3Jlc3MhXCIpO1xuICB1cGRhdGVfQ3VycmVudE1vZGUoKTtcbn0pO1xuXG5zYXZlQnRuRkxleC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ganVtcFRvSG9tZVBhZ2UoKSk7XG5cbi8qIHRvZ2dsZSBuYXZiYXIgKi9cblxubGV0IG5hdkJhckxpbmtzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5uYXZCYXJMaW5rc1wiKTtcbm1lbnVMaW5rX3RvZ2dsZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT5cbiAgbmF2QmFyTGlua3MuY2xhc3NMaXN0LnRvZ2dsZShcInNob3dcIilcbik7XG4iLCJjb25zdCBjcmVhdGVJY29uID0gKGJ0bkNsYXNzLCBob3ZlclRpdGxlLCBpY29uQ2xhc3MpID0+IHtcbiAgY29uc3QgYnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5cIiArIGJ0bkNsYXNzKTtcbiAgYnRuLnNldEF0dHJpYnV0ZShcInRpdGxlXCIsIGhvdmVyVGl0bGUpO1xuXG4gIGNvbnN0IGljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaVwiKTtcblxuICBpY29uLmNsYXNzTGlzdC5hZGQoXCJmYXNcIiwgaWNvbkNsYXNzLCBcImZhLWxnXCIpO1xuXG4gIGJ0bi5hcHBlbmRDaGlsZChpY29uKTtcbn07XG5cbmNvbnN0IG1ha2VTZXNzaW9uQnRucyA9ICgpID0+IHtcbiAgY3JlYXRlSWNvbihcInN0YXJ0XCIsIFwic3RhcnRcIiwgXCJmYS1wbGF5XCIpO1xuICBjcmVhdGVJY29uKFwicmVzZXRcIiwgXCJyZXNldFwiLCBcImZhLXJlZG9cIik7XG4gIGNyZWF0ZUljb24oXCJwYXVzZVwiLCBcInBhdXNlXCIsIFwiZmEtc3RvcFwiKTtcbn07XG5cbmV4cG9ydCB7IG1ha2VTZXNzaW9uQnRucyB9O1xuIiwiaW1wb3J0IHt9IGZyb20gXCIuL21vZHVsZXMvYnV0dG9uQ2xpY2tBY3Rpb25zXCI7XG5pbXBvcnQgeyBzY29yZSB9IGZyb20gXCIuL21vZHVsZXMvZGl2U2VsZWN0b3JzXCI7XG5pbXBvcnQge1xuICBzZXRCb3hUZXh0LFxuICB0aW1lclNvdW5kLFxuICBzZXRDaXJjbGVQcm9ncmVzcyxcbiAgc2V0TGV2ZWxfUHJvZ3Jlc3MsXG59IGZyb20gXCIuL21vZHVsZXMvbWlzY0Z1bmNzXCI7XG5cbmltcG9ydCB7IG1ha2VTZXNzaW9uQnRucyB9IGZyb20gXCIuL21vZHVsZXMvc2Vzc2lvbkJ1dHRvbnNcIjtcbmltcG9ydCB7IHRvZ2dsZVRoZW1lIH0gZnJvbSBcIi4vbW9kdWxlcy90aGVtZXNcIjtcbmltcG9ydCB7IHNhdmVVc2VyRGF0YV90b0RCLCBnZXRVc2VyRGF0YV9mcm9tREIgfSBmcm9tIFwiLi9tb2R1bGVzL3VzZXJBdXRoLmpzXCI7XG5cbmltcG9ydCB7IHNob3dSZW1haW5pbmdfR2VtcyB9IGZyb20gXCIuL21vZHVsZXMvcmV3YXJkc1BhZ2UuanNcIjtcblxuLy8gdXNlciBpbmZvXG5leHBvcnQgbGV0IHVzZXJTY29yZSA9IDAsXG4gIHVzZXJUaGVtZSA9IFwibGlnaHRcIixcbiAgdXNlclNvdW5kID0gXCJwaWFub1wiLFxuICB1c2VyTW9kZSA9IFwiZGVmYXVsdFwiLFxuICB1c2VyQ2FyZHMgPSAwO1xuXG4vL3N5bmMgdXNlciBkYXRhXG5nZXRVc2VyRGF0YV9mcm9tREIoKTtcbm1ha2VTZXNzaW9uQnRucygpO1xuXG4vLyBzYXZlTWluIHNhdmVzIHZhbHVlcyB3aGVuIHRpbWVyIHBhdXNlZFxuZXhwb3J0IGxldCBzYXZlTWluLCB0aW1lciwgY3VycmVudENsaWNrO1xuZXhwb3J0IGxldCB0b3RhbFRpbWUgPSAyNSxcbiAgcG9tb1RpbWUgPSB0b3RhbFRpbWUgKiA2MDtcblxuY29uc3QgY2hlY2tUaW1lciA9ICh0ZW1wKSA9PiB7XG4gIGlmIChwb21vVGltZSA9PSAwKSB7XG4gICAgY2xlYXJJbnRlcnZhbCh0ZW1wKSwgdGltZXJTb3VuZCgpO1xuXG4gICAgaWYgKHVzZXJNb2RlID09IFwiZGVmYXVsdFwiKSB7XG4gICAgICB1c2VyU2NvcmUgPSBwYXJzZUludCh1c2VyU2NvcmUpO1xuICAgICAgdXNlclNjb3JlICs9IHRvdGFsVGltZSAqIDEwO1xuICAgICAgc2V0TGV2ZWxfUHJvZ3Jlc3MoKTtcblxuICAgICAgc2NvcmUuaW5uZXJUZXh0ID1cbiAgICAgICAgcGFyc2VJbnQoYCR7dXNlclNjb3JlfWApICsgcGFyc2VJbnQoYCR7dXNlckNhcmRzfWAgKiAyMDAwKTsgLy8gc2hvd3MgIGFjdHVhbCBzY29yZSAocHVyY2hhc2VzIHBvaW50cyBpbmNsdWRlZCApXG5cbiAgICAgIHNob3dSZW1haW5pbmdfR2Vtcyh1c2VyU2NvcmUpO1xuICAgICAgc2F2ZVVzZXJEYXRhX3RvREIoKTtcbiAgICB9XG4gIH1cbn07XG5cbmNvbnN0IHVwZGF0ZVBvbW9kb3JvID0gKCkgPT4ge1xuICBjaGVja1RpbWVyKHRpbWVyKTtcblxuICBjb25zdCBtaW4gPSBNYXRoLmZsb29yKHBvbW9UaW1lIC8gNjApO1xuICBjb25zdCBzZWMgPSBwb21vVGltZSAlIDYwO1xuXG4gIGlmIChwb21vVGltZSA9PT0gMCkge1xuICAgIHNldEJveFRleHQobWluLCBzZWMpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHNldEJveFRleHQobWluLCBzZWMpO1xuICBwb21vVGltZS0tO1xuICBzZXRDaXJjbGVQcm9ncmVzcygpO1xufTtcblxuZXhwb3J0IGNvbnN0IHN0YXJ0UG9tb2Rvcm8gPSAoKSA9PiB7XG4gIGN1cnJlbnRDbGljayA9PSBcInBhdXNlXCIgPyAocG9tb1RpbWUgPSBzYXZlTWluKSA6IChwb21vVGltZSA9IHRvdGFsVGltZSAqIDYwKTtcbiAgdGltZXIgPSBzZXRJbnRlcnZhbCh1cGRhdGVQb21vZG9ybywgMTAwMCk7XG59O1xuXG50b2dnbGVUaGVtZSgpO1xuXG5leHBvcnQgY29uc3QgdXBkYXRlX0N1cnJlbnRNb2RlID0gKCkgPT4ge1xuICBsZXQgYyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY3VycmVudF9Nb2RlXCIpO1xuICBjLnRleHRDb250ZW50ID0gYCR7dXNlck1vZGV9IG1vZGVgO1xufTtcblxudXBkYXRlX0N1cnJlbnRNb2RlKCk7XG5cbnNjb3JlLmlubmVyVGV4dCA9IHBhcnNlSW50KGAke3VzZXJTY29yZX1gKSArIHBhcnNlSW50KGAke3VzZXJDYXJkc31gICogMjAwMCk7XG5cbnNob3dSZW1haW5pbmdfR2Vtcyh1c2VyU2NvcmUpO1xuIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0aWYoX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSkge1xuXHRcdHJldHVybiBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSIsIi8vIHN0YXJ0dXBcbi8vIExvYWQgZW50cnkgbW9kdWxlXG5fX3dlYnBhY2tfcmVxdWlyZV9fKDE0Nyk7XG4vLyBUaGlzIGVudHJ5IG1vZHVsZSB1c2VkICdleHBvcnRzJyBzbyBpdCBjYW4ndCBiZSBpbmxpbmVkXG4iXSwic291cmNlUm9vdCI6IiJ9