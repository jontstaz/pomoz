(()=>{"use strict";var e={d:(t,o)=>{for(var r in o)e.o(o,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:o[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{gz:()=>he,sS:()=>Ae,rC:()=>ve,DH:()=>xe,HT:()=>Ce,m1:()=>Le,jW:()=>Be,_:()=>qe,g1:()=>pe,E5:()=>Se});const t=document.querySelector(".flexMain"),o=document.querySelector(".pause"),r=document.querySelector(".start"),l=document.querySelector(".reset"),n=document.querySelector(".themeToggle_btn"),s=document.querySelector("body"),c=document.querySelector(".squareBox"),a=document.querySelector(".sessionBtns"),d=document.querySelector(".settingsBtn"),u=document.querySelector(".settingsPage"),i=document.querySelector(".defaultDark"),y=document.querySelector(".defaultLight"),m=document.querySelector(".brandLogo"),f=(document.querySelector(".aboutPage"),document.querySelector(".menulink-toggle")),g=document.querySelector(".modesLink"),E=document.querySelector(".modesDiv"),k=document.querySelector(".modeCurrentTime"),b=document.querySelector(".increaseTimeArrow"),v=document.querySelector(".decreaseTimeArrow"),C=document.querySelector(".breakMode"),h=document.querySelector(".defaultMode"),S=document.querySelector(".automaticMode"),p=document.querySelector(".timerModes"),q=document.querySelector(".modeSettings"),L=document.querySelector(".increaseTimeChevron"),A=document.querySelector(".saveBtnFLex");document.querySelector(".timerSoundsDiv");let D=0;const x=e=>{Se=e,re()},B=(e,t)=>{s.style.backgroundColor=t,s.style.color=e},I=(e,t)=>{let o=document.querySelector(".current_Mode");o.style.color=e,o.style.backgroundColor=t},w=(e,t)=>{c.style.backgroundColor=e,c.style.borderColor=t},_=(e,t,o)=>{let r=document.querySelector(".innerC"),l=document.querySelector(".outerC"),n=document.querySelector("svg");l.style.stroke=e,r.style.stroke=t,n.style.fill=o},F=(e,t)=>{a.style.backgroundColor=e,a.style.borderColor=t},$=(e,t,l)=>{[r,o].forEach((o=>{o.style.backgroundColor=t,o.style.color=e,o.addEventListener("mouseover",(()=>{o.style.backgroundColor=l,o.style.color=t})),o.addEventListener("mouseout",(()=>{o.style.backgroundColor=t,o.style.color=e}))}))},M=(e,t,o)=>{l.style.backgroundColor=t,l.style.color=e,l.addEventListener("mouseover",(()=>{l.style.backgroundColor=o})),l.addEventListener("mouseout",(()=>{l.style.backgroundColor=t}))},P=(e,t,o,r,l,n)=>{p.style.backgroundColor=t,[h,C,S].forEach((o=>{o.style.color=e,o.style.backgroundColor=t,o.addEventListener("click",(()=>{}))})),h.addEventListener("click",(()=>{[C,S].forEach((e=>{e.style.backgroundColor=t})),h.style.backgroundColor=o})),C.addEventListener("click",(()=>{[h,S].forEach((e=>{e.style.backgroundColor=t})),C.style.backgroundColor=o})),S.addEventListener("click",(()=>{[h,C].forEach((e=>{e.style.backgroundColor=t})),S.style.backgroundColor=o})),q.style.backgroundColor=r,k.style.color=l,k.style.backgroundColor=n,[b,v,L].forEach((e=>{e.style.backgroundColor=n,e.style.color=l,e!=L&&(e.addEventListener("mouseover",(()=>{e.style.backgroundColor=l,e.style.color=n})),e.addEventListener("mouseout",(()=>{e.style.backgroundColor=n,e.style.color=l})))})),h.style.backgroundColor=o,A.style.backgroundColor=t,A.style.color=e,A.addEventListener("mouseover",(()=>{A.style.backgroundColor=o,A.style.color=e})),A.addEventListener("mouseout",(()=>{A.style.backgroundColor=t,A.style.color=e}))},T=(e,t)=>{let o=document.querySelector(".settingsbtn");o.style.color=e,o.style.backgroundColor=t},O=(e,t,o,r,l)=>{let n=document.querySelector(".sound_Settings");n.style.backgroundColor=l,n.style.color=o;let s=document.querySelectorAll(".timer_audio");s.forEach((l=>{l.style.backgroundColor=r,l.addEventListener("mouseover",(()=>{l.style.backgroundColor=t,l.style.color=e})),l.addEventListener("mouseout",(()=>{l.style.backgroundColor=r,l.style.color=o})),l.addEventListener("click",(()=>{for(let e=0;e<se.length;e++)s[e].style.color=o,s[e].style.textDecoration="line-through",s[e].style.backgroundColor=r,s[e].style.border="none";l.style.textDecoration="none",l.style.backgroundColor="red",l.style.color="blue"}))}))},z=(e,t,o,r,l,n)=>{document.querySelector(".auth_Div").style.backgroundColor=e;let s=document.querySelector(".ph-key"),c=document.querySelector(".ph-at"),a=document.querySelector("#userEmail"),d=document.querySelector("#userPassword"),u=document.querySelector(".userAvatar_Div");[s,c,a,d,u].forEach((e=>{e.style.backgroundColor=t,e!=a&&e!=d||(e.style.color=o)}));let i=document.querySelector("#signUpBtn"),y=document.querySelector("#signInBtn"),m=document.querySelector("#signOutBtn");[i,y].forEach((e=>{e.style.backgroundColor=t,e.style.color=r})),m.style.backgroundColor=n,m.style.color=l},j=()=>{x("light"),B("#545E6A","#ffffff"),w("#ffffff","#f6f6f6"),I("#527f6b","#caf7e3"),F("#ffffff","#f6f6f6"),$("#668aa4","#C0E4FE","#668aa4"),M("#FD8A89","#FFD9D8","#545E6A"),T("white","#545E6A"),P("#ffffff","#545E6A","#4a5460","#C0E4FE","#545E6A","#ffffff"),_("#f0f0f0","#C0E4FE","#545e6a"),O("#545e6a","#ffffff","#545e6a","#8deeb9","#8deeb9"),z("#CAEEFF","white","#545e6a","#545e6a","white","#545e6a")},H=()=>{x("dark"),B("#a4aeba","#1E222A"),w("#23272f","#23272f"),I("#878b93","#2d3139"),F("#2a2e36","#2a2e36"),$("#D08770","#1E222A","#D08770"),F("#2a2e36","#2a2e36"),$("#D08770","#1E222A","#D08770"),M("#23272f","#D08770","#8deeb9"),T("#8deeb9","#23272f"),P("#a4aeba","#2C323B","#4a5460","#40464F","#81A1C1","#2C323B"),_("#1E222A","#81A1C1","#81A1C1"),O("#FF6E67","#1E222A","#787C84","#2a2e36","#2a2e36","#1E222A"),z("#23272F","#2D3139","#C3C7CF","#C3C7CF","#FF6E67","#2D3139")};y.addEventListener("click",j),i.addEventListener("click",H),firebase.initializeApp({apiKey:"AIzaSyAk8kebOX8MDqtYYyy7sAdd4fsZa4R8M0s",authDomain:"pomoreward.firebaseapp.com",projectId:"pomoreward",storageBucket:"pomoreward.appspot.com",messagingSenderId:"319256565665",appId:"1:319256565665:web:62d73e7fb1a493d51d5de0"});const R=firebase.auth(),U=e=>{let t=document.querySelector(".userAvatar_Div"),o=document.querySelector(".email_InputDiv"),r=document.querySelector(".pass_InputDiv");"show"==e?(o.style.display="none",r.style.display="none",t.style.display="flex"):(t.style.display="none",o.style.display="flex",r.style.display="flex")};let W=document.getElementById("signUpBtn"),G=document.getElementById("signInBtn"),Y=document.getElementById("signOutBtn"),K=document.querySelector(".authDiv_Header");const N=e=>{let t="";for(let o=0;o<e.length&&"@"!=e[o];o++)t+=e[o];return t};R.onAuthStateChanged((function(e){if(e){let t=e.email;K.innerText=N(t),G.style.display="none",W.style.display="none",U("show")}else U("hide"),K.innerText="Account",G.style.display="flex",W.style.display="flex"})),W.addEventListener("click",(()=>{(()=>{let e=document.getElementById("userEmail"),t=document.getElementById("userPassword");R.createUserWithEmailAndPassword(e.value,t.value).catch((e=>alert(e.message)))})()})),G.addEventListener("click",(()=>{(()=>{let e=document.getElementById("userEmail"),t=document.getElementById("userPassword");R.signInWithEmailAndPassword(e.value,t.value).catch((e=>alert(e.message)))})()})),Y.addEventListener("click",(()=>{(()=>{R.signOut();let e=document.getElementById("userEmail"),t=document.getElementById("userPassword");e.value="",t.value="",location.reload()})(),showRemaining_Gems(0)}));let V=document.querySelector(".userStatus"),X=document.querySelector(".auth_Div");const Z=document.querySelector(".settingsPage"),J=document.querySelector(".modesDiv"),Q=document.querySelector(".reset"),ee=document.querySelector(".squareBox"),te=document.querySelector(".sessionBtns"),oe=document.querySelector(".flexMain");V.addEventListener("click",(()=>{[Z,ee,te,Q,oe,J].forEach((e=>{e.style.display="none"})),X.style.display="flex"}));const re=()=>{R.onAuthStateChanged((function(e){if(e){let t=N(e.email);firebase.database().ref(`users/${t}`).set({theme:`${Se}`,sound:`${pe}`})}}))};let le=document.querySelector(".sound_Settings");const ne=e=>{let t=document.createElement("p");t.classList.add("timer_audio"),t.textContent=e,le.appendChild(t)},se=["cocGame","siren","yooo","pikachuu","angryBird","gnuReload","piano","vasco_shot","pizzaro","white_beard"];(()=>{for(let e=0;e<se.length;e++)ne(se[e])})();let ce=document.querySelectorAll(".timer_audio");ce.forEach((e=>{e.addEventListener("mouseover",(()=>{e.style.backgroundColor="#545E6A",e.style.cursor="pointer",e.style.color="white"})),e.addEventListener("mouseout",(()=>{e.style.backgroundColor="#fafafa",e.style.cursor="default",e.style.color="#545E6A"})),e.addEventListener("click",(()=>{for(let e=0;e<se.length;e++)ce[e].style.border="none",ce[e].style.color="#82868E",ce[e].style.textDecoration="line-through";e.style.textDecoration="none",e.style.color="#545E6A",e.style.border="5px dotted #545E6A",e.style.backgroundColor="pink",pe=e.innerText,re(),document.querySelector("#dingding").setAttribute("src",`./assets/sounds/${pe}.mp3`),de()}))}));let ae=document.querySelector(".timerText");const de=()=>{re();let e=document.querySelector("#dingding");e.setAttribute("src",`./assets/sounds/${pe}.mp3`),e.play()},ue=(e,t)=>{let o;e<10?o=`0${e} : ${t}`:t<10&&(o=`${e} : 0${t}`),o=`${e} : ${t}`,ae.textContent=o},ie=()=>{ae.style.backgroundImage="url('https://media1.tenor.com/images/5fe35bec1c80a880bf59ae32a9716ace/tenor.gif?itemid=8953038')",ae.textContent=">:("},ye=e=>{k.textContent=e<10?`0${e} : 00`:`${e} : 00`},me=()=>{let e=(Le-Ae/60)/Le*100,t=document.querySelector(".innerC"),o=2*t.r.baseVal.value*Math.PI;t.style.strokeDasharray=o,t.style.strokeDashoffset=o-e/100*o};let fe=document.querySelector(".auth_Div");[r,l].forEach((e=>{e.addEventListener("click",(()=>(ae.style.animation=" none",ae.style.backgroundImage="none","reset"===e.className?(he="reset",clearInterval(Ce),Ae=60*Le,ue(Le,0),void me()):(he="start",new Audio("./assets/sounds/tick.mp3").play(),clearInterval(Ce),void xe()))))}));let ge=0;o.addEventListener("click",(()=>{ge++,he=ge%2==0?"resume":"pause","pause"==he?(()=>{Ae!==60*Le&&0!==Ae||ie(),he="pause",ve=Ae,clearInterval(Ce);const e=Math.floor(ve/60);ue(e,ve%60)})():(Ae!==60*Le&&0!==Ae||ie(),he="pause",Ae!=60*Le&&xe())})),d.addEventListener("mouseover",(()=>d.style.textDecoration="underline")),d.addEventListener("mouseout",(()=>d.style.textDecoration="none")),d.addEventListener("click",(()=>{[c,a,l,E,t,fe].forEach((e=>e.style.display="none")),u.style.display="flex"}));const Ee=()=>{[c,a,l,t].forEach((e=>{e.style.display=""})),[u,E,fe].forEach((e=>e.style.display="none"))};m.addEventListener("click",(()=>Ee())),g.addEventListener("click",(()=>([u,c,a,l,t,fe].forEach((e=>{e.style.display="none"})),void(E.style.display="block")))),b.addEventListener("click",(()=>{Le++,ye(Le),ue(Le,0)})),v.addEventListener("click",(()=>{Le>1&&(Le--,ye(Le),ue(Le,0))})),h.addEventListener("click",(()=>{[C,S].forEach((e=>{e.style.backgroundColor="#36404c"})),Le=25,ye(Le),h.style.backgroundColor="#4a5460",qe="default",Be()})),C.addEventListener("click",(()=>{[h,S].forEach((e=>{e.style.backgroundColor="#36404c"})),Le=5,ye(Le),C.style.backgroundColor="#4a5460",qe="break",Be()})),S.addEventListener("click",(()=>{[C,h].forEach((e=>{e.style.backgroundColor="#36404c"})),Le=25,ye(Le),S.style.backgroundColor="#4a5460",qe="automatic",alert("in progress!"),Be()})),A.addEventListener("click",(()=>Ee()));let ke=document.querySelector(".navBarLinks");f.addEventListener("click",(()=>ke.classList.toggle("show")));const be=(e,t,o)=>{const r=document.querySelector("."+e);r.setAttribute("title",t);const l=document.createElement("i");l.classList.add("fas",o,"fa-lg"),r.appendChild(l)};let ve,Ce,he,Se="light",pe="piano",qe="default";R.onAuthStateChanged((function(e){if(e){let t=N(e.email);firebase.database().ref("users").child(t).on("value",(function(e){e.val().theme&&(Se=e.val().theme,"light"==Se?j():H()),e.val().sound&&(pe=e.val().sound)}))}})),be("start","start","fa-play"),be("reset","reset","fa-redo"),be("pause","pause","fa-stop");let Le=25,Ae=60*Le;const De=()=>{0==Ae&&(clearInterval(Ce),de(),"default"==qe&&re());const e=Math.floor(Ae/60),t=Ae%60;0!==Ae?(ue(e,t),Ae--,me()):ue(e,t)},xe=()=>{null!=he&&(Ae="pause"==he?ve:60*Le),Ce=setInterval(De,1e3)};n.addEventListener("click",(()=>{n.classList.toggle("ph-toggle-right"),D++,D%2!=0?H():j()}));const Be=()=>{document.querySelector(".current_Mode").textContent=`${qe} mode`};Be()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,