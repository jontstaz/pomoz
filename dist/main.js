(()=>{"use strict";var e={147:(e,t,o)=>{o.d(t,{gz:()=>Xe,sS:()=>rt,rC:()=>Ye,DH:()=>nt,HT:()=>Ne,m1:()=>ot,jW:()=>ct,_y:()=>tt,_:()=>et,LK:()=>Ze,g1:()=>Qe,E5:()=>Je});const r=document.querySelector(".flexMain"),l=document.querySelector(".pause"),n=document.querySelector(".start"),c=document.querySelector(".reset"),a=document.querySelector(".themeToggle_btn"),s=document.querySelector("body"),d=document.querySelector(".squareBox"),u=document.querySelector(".sessionBtns"),i=document.querySelector(".score"),y=document.querySelector(".settingsBtn"),f=document.querySelector(".settingsPage"),m=document.querySelector(".defaultDark"),g=document.querySelector(".defaultLight"),E=document.querySelector(".brandLogo"),b=document.querySelector(".aboutPage"),k=document.querySelector(".dashboardLink"),S=document.querySelector(".dashboardPage"),C=document.querySelector(".aboutBtn"),p=document.querySelector(".menulink-toggle"),v=document.querySelector(".modesLink"),q=document.querySelector(".modesDiv"),h=document.querySelector(".modeCurrentTime"),L=document.querySelector(".increaseTimeArrow"),A=document.querySelector(".decreaseTimeArrow"),x=document.querySelector(".breakMode"),I=document.querySelector(".defaultMode"),w=document.querySelector(".automaticMode"),D=document.querySelector(".timerModes"),B=document.querySelector(".modeSettings"),_=document.querySelector(".increaseTimeChevron"),F=document.querySelector(".saveBtnFLex");document.querySelector(".timerSoundsDiv");let P=document.querySelector(".gemsAvailable");const $=e=>{P.textContent=e},M=e=>`https://gitlab.com/siduck761/ezli/-/raw/master/sfw/${e}.jpg`;let T=document.querySelector(".showCollection"),O=document.querySelector(".imagePreviewer"),z=document.querySelector(".default_WaifuCard_Div"),W=document.querySelector(".default_WaifuCard_Img");const j=()=>{O.style.display="flex",z.style.display="flex";let e=document.querySelectorAll(".sampleWaifuCard");e.length>0&&e.forEach((e=>e.remove()))};document.querySelector(".unlockRewardsDiv").addEventListener("click",(()=>{if(O.style.display="flex",z.style.display="grid",j(),Ze>=2e3)return tt=parseInt(tt)+1,Ze-=2e3,$(Ze),xe(),We(z),void W.setAttribute("src",M(tt));alert("not enough gems!")}));const R=e=>{const t=new Image;t.src=M(e),t.classList.add("sampleWaifuCard"),t.setAttribute("loading","lazy"),O.appendChild(t)};T.addEventListener("click",(()=>{j(),O.style.display="grid",z.style.display="none",(e=>{for(let t=1;t<=e;t++)R(t)})(tt)}));let H=0;const U=e=>{Je=e,xe()},G=(e,t)=>{s.style.backgroundColor=t,s.style.color=e},K=(e,t)=>{let o=document.querySelector(".current_Mode");o.style.color=e,o.style.backgroundColor=t},V=(e,t)=>{d.style.backgroundColor=e,d.style.borderColor=t},Y=(e,t,o)=>{let r=document.querySelector(".innerC"),l=document.querySelector(".outerC"),n=document.querySelector("svg");l.style.stroke=e,r.style.stroke=t,n.style.fill=o},N=(e,t)=>{u.style.backgroundColor=e,u.style.borderColor=t},X=(e,t,o)=>{[n,l].forEach((r=>{r.style.backgroundColor=t,r.style.color=e,r.addEventListener("mouseover",(()=>{r.style.backgroundColor=o,r.style.color=t})),r.addEventListener("mouseout",(()=>{r.style.backgroundColor=t,r.style.color=e}))}))},Z=(e,t,o)=>{c.style.backgroundColor=t,c.style.color=e,c.addEventListener("mouseover",(()=>{c.style.backgroundColor=o})),c.addEventListener("mouseout",(()=>{c.style.backgroundColor=t}))},J=(e,t,o,r,l,n)=>{D.style.backgroundColor=t,[I,x,w].forEach((o=>{o.style.color=e,o.style.backgroundColor=t,o.addEventListener("click",(()=>{}))})),I.addEventListener("click",(()=>{[x,w].forEach((e=>{e.style.backgroundColor=t})),I.style.backgroundColor=o})),x.addEventListener("click",(()=>{[I,w].forEach((e=>{e.style.backgroundColor=t})),x.style.backgroundColor=o})),w.addEventListener("click",(()=>{[I,x].forEach((e=>{e.style.backgroundColor=t})),w.style.backgroundColor=o})),B.style.backgroundColor=r,h.style.color=l,h.style.backgroundColor=n,[L,A,_].forEach((e=>{e.style.backgroundColor=n,e.style.color=l,e!=_&&(e.addEventListener("mouseover",(()=>{e.style.backgroundColor=l,e.style.color=n})),e.addEventListener("mouseout",(()=>{e.style.backgroundColor=n,e.style.color=l})))})),I.style.backgroundColor=o,F.style.backgroundColor=t,F.style.color=e,F.addEventListener("mouseover",(()=>{F.style.backgroundColor=o,F.style.color=e})),F.addEventListener("mouseout",(()=>{F.style.backgroundColor=t,F.style.color=e}))},Q=(e,t)=>{document.querySelectorAll("li").forEach((t=>{t.style.color=e})),document.querySelectorAll("h2").forEach((e=>{e.style.color=t,e.style.borderColor=t}))},ee=(e,t)=>{let o=document.querySelector(".settingsbtn");o.style.color=e,o.style.backgroundColor=t},te=(e,t,o,r,l)=>{document.querySelector(".dashboardPage").style.backgroundColor=l,document.querySelectorAll(".currentScore").forEach((o=>{o.style.color=e,o.style.backgroundColor=t}));let n=document.querySelector(".score");n.style.backgroundColor=o,n.style.color=r},oe=(e,t,o,r)=>{let l=document.querySelector(".scoreProgress"),n=document.querySelector(".scoreInnerCircle"),c=document.querySelector(".scoreOuterCircle"),a=document.querySelector(".scoreCircle");n.style.stroke=e,c.style.stroke=t,a.style.fill=o,l.style.backgroundColor=r},re=(e,t,o,r,l)=>{let n=document.querySelector(".sound_Settings");n.style.backgroundColor=l,n.style.color=o;let c=document.querySelectorAll(".timer_audio");c.forEach((l=>{l.style.backgroundColor=r,l.addEventListener("mouseover",(()=>{l.style.backgroundColor=t,l.style.color=e})),l.addEventListener("mouseout",(()=>{l.style.backgroundColor=r,l.style.color=o})),l.addEventListener("click",(()=>{for(let e=0;e<De.length;e++)c[e].style.color=o,c[e].style.textDecoration="line-through",c[e].style.backgroundColor=r,c[e].style.border="none";l.style.textDecoration="none",l.style.backgroundColor="red",l.style.color="blue"}))}))},le=(e,t,o,r,l,n)=>{document.querySelector(".auth_Div").style.backgroundColor=e;let c=document.querySelector(".ph-key"),a=document.querySelector(".ph-at"),s=document.querySelector("#userEmail"),d=document.querySelector("#userPassword"),u=document.querySelector(".userAvatar_Div");[c,a,s,d,u].forEach((e=>{e.style.backgroundColor=t,e!=s&&e!=d||(e.style.color=o)}));let i=document.querySelector("#signUpBtn"),y=document.querySelector("#signInBtn"),f=document.querySelector("#signOutBtn");[i,y].forEach((e=>{e.style.backgroundColor=t,e.style.color=r})),f.style.backgroundColor=n,f.style.color=l},ne=(e,t,o,r,l,n,c,a,s)=>{document.querySelector(".rewardsPage").style.backgroundColor=e,document.querySelector(".remainingGems_Div").style.backgroundColor=t,document.querySelector(".waifuPrice").style.color=o,document.querySelector(".unlockRewardsDiv").style.backgroundColor=r;const d=document.querySelector(".unlockRewards_title");d.style.backgroundColor=l,d.style.color=n;const u=document.querySelector(".showCollection");u.style.backgroundColor=c,u.style.color=a,document.querySelector(".imagePreviewer").style.backgroundColor=s},ce=()=>{U("light"),G("#545E6A","#ffffff"),V("#ffffff","#f6f6f6"),K("#527f6b","#caf7e3"),N("#ffffff","#f6f6f6"),X("#668aa4","#C0E4FE","#668aa4"),Z("#FD8A89","#FFD9D8","#ffffff"),ee("white","#545E6A"),J("#ffffff","#545E6A","#4a5460","#C0E4FE","#545E6A","#ffffff"),Q("#545e6a","#545e6a"),Y("#f0f0f0","#C0E4FE","#545e6a"),te("#82868E","#ffffff","#545e6a","#ffffff","#fafafa"),oe("#8deeb9","#f0f0f0","#82868E","#ffffff"),re("#545e6a","#ffffff","#545e6a","#8deeb9","#8deeb9"),le("#CAEEFF","white","#545e6a","#545e6a","white","#545e6a"),ze(),ne("#ffffff","#ffffff","#545e6a","#ffffff","#E6E6FA","#545e6a","#ffffff","#545e6a","#fafafa")},ae=()=>{U("dark"),G("#a4aeba","#1E222A"),V("#23272f","#23272f"),K("#878b93","#2d3139"),N("#2a2e36","#2a2e36"),X("#E78992","#1E222A","#E78992"),N("#2a2e36","#2a2e36"),X("#E78992","#1E222A","#E78992"),Z("#a4aeba","#1E222A","#61afef"),ee("#8deeb9","#23272f"),J("#a4aeba","#2C323B","#4a5460","#40464F","#61afef","#2C323B"),Q("#C3C7CF","#AAAEB6"),Y("#1E222A","#61afef","#61afef"),te("#787C84","#1E222A","#FF6E67","#1E222A","#23272f"),oe("#A3BE8C","#23272f","#787C84","#1E222A"),re("#FF6E67","#1E222A","#787C84","#2a2e36","#2a2e36","#1E222A"),le("#23272F","#2D3139","#C3C7CF","#C3C7CF","#FF6E67","#2D3139"),ze(),ne("#23272f","#292d35","#23272F","#a3b8ef","#2a2e36","#FF6E67","#23272f","#7ed491","#1E222A")};g.addEventListener("click",ce),m.addEventListener("click",ae);let se=document.querySelector(".score");firebase.initializeApp({apiKey:"AIzaSyAk8kebOX8MDqtYYyy7sAdd4fsZa4R8M0s",authDomain:"pomoreward.firebaseapp.com",projectId:"pomoreward",storageBucket:"pomoreward.appspot.com",messagingSenderId:"319256565665",appId:"1:319256565665:web:62d73e7fb1a493d51d5de0"});const de=firebase.auth(),ue=e=>{let t=document.querySelector(".userAvatar_Div"),o=document.querySelector(".email_InputDiv"),r=document.querySelector(".pass_InputDiv");"show"==e?(o.style.display="none",r.style.display="none",t.style.display="flex"):(t.style.display="none",o.style.display="flex",r.style.display="flex")};let ie=document.getElementById("signUpBtn"),ye=document.getElementById("signInBtn"),fe=document.getElementById("signOutBtn"),me=document.querySelector(".authDiv_Header");const ge=e=>{let t="";for(let o=0;o<e.length&&"@"!=e[o];o++)t+=e[o];return t};de.onAuthStateChanged((function(e){if(e){let t=e.email;me.innerText=ge(t),ye.style.display="none",ie.style.display="none",ue("show")}else ue("hide"),me.innerText="Account",ye.style.display="flex",ie.style.display="flex"})),ie.addEventListener("click",(()=>{(()=>{let e=document.getElementById("userEmail"),t=document.getElementById("userPassword");de.createUserWithEmailAndPassword(e.value,t.value).catch((e=>alert(e.message)))})()})),ye.addEventListener("click",(()=>{(()=>{let e=document.getElementById("userEmail"),t=document.getElementById("userPassword");de.signInWithEmailAndPassword(e.value,t.value).catch((e=>alert(e.message)))})()})),fe.addEventListener("click",(()=>{(()=>{de.signOut();let e=document.getElementById("userEmail"),t=document.getElementById("userPassword");e.value="",t.value="",location.reload()})(),se.innerText=0,$(0)}));let Ee=document.querySelector(".userStatus"),be=document.querySelector(".auth_Div");const ke=document.querySelector(".settingsPage"),Se=document.querySelector(".dashboardPage"),Ce=document.querySelector(".modesDiv"),pe=document.querySelector(".aboutPage"),ve=document.querySelector(".reset"),qe=document.querySelector(".squareBox"),he=document.querySelector(".sessionBtns"),Le=document.querySelector(".flexMain"),Ae=document.querySelector(".rewardsPage");Ee.addEventListener("click",(()=>{[ke,pe,qe,he,ve,Se,Le,Ce,Ae].forEach((e=>{e.style.display="none"})),be.style.display="flex"}));const xe=()=>{de.onAuthStateChanged((function(e){if(e){let t=ge(e.email);firebase.database().ref(`users/${t}`).set({score:`${Ze}`,theme:`${Je}`,sound:`${Qe}`,cards:`${tt}`})}}))};let Ie=document.querySelector(".sound_Settings");const we=e=>{let t=document.createElement("p");t.classList.add("timer_audio"),t.textContent=e,Ie.appendChild(t)},De=["cocGame","siren","yooo","pikachuu","angryBird","gnuReload","piano","vasco_shot","pizzaro","white_beard"];(()=>{for(let e=0;e<De.length;e++)we(De[e])})();let Be=document.querySelectorAll(".timer_audio");Be.forEach((e=>{e.addEventListener("mouseover",(()=>{e.style.backgroundColor="#545E6A",e.style.cursor="pointer",e.style.color="white"})),e.addEventListener("mouseout",(()=>{e.style.backgroundColor="#fafafa",e.style.cursor="default",e.style.color="#545E6A"})),e.addEventListener("click",(()=>{for(let e=0;e<De.length;e++)Be[e].style.border="none",Be[e].style.color="#82868E",Be[e].style.textDecoration="line-through";e.style.textDecoration="none",e.style.color="#545E6A",e.style.border="5px dotted #545E6A",e.style.backgroundColor="pink",Qe=e.innerText,xe(),document.querySelector("#dingding").setAttribute("src",`./assets/sounds/${Qe}.mp3`),Fe()}))}));let _e=document.querySelector(".timerText");const Fe=()=>{xe();let e=document.querySelector("#dingding");e.setAttribute("src",`./assets/sounds/${Qe}.mp3`),e.play()},Pe=(e,t)=>{let o;e<10?o=`0${e} : ${t}`:t<10&&(o=`${e} : 0${t}`),o=`${e} : ${t}`,_e.textContent=o},$e=()=>{_e.style.backgroundImage="url('https://media1.tenor.com/images/5fe35bec1c80a880bf59ae32a9716ace/tenor.gif?itemid=8953038')",_e.textContent=">:("},Me=()=>{let e=document.querySelector(".score"),t=parseInt(e.textContent)/5e4*100,o=document.querySelector(".scoreInnerCircle"),r=2*o.r.baseVal.value*Math.PI;o.style.strokeDasharray=r,o.style.strokeDashoffset=r-t/100*r},Te=e=>{h.textContent=e<10?`0${e} : 00`:`${e} : 00`},Oe=()=>{let e=(ot-rt/60)/ot*100,t=document.querySelector(".innerC"),o=2*t.r.baseVal.value*Math.PI;t.style.strokeDasharray=o,t.style.strokeDashoffset=o-e/100*o};const ze=()=>{let e="#"+document.querySelector("body").style.backgroundColor.match(/\d+/g).map((e=>(+e).toString(16).padStart(2,0))).join``;var t;document.querySelector(".aboutCaption").style.backgroundColor=(t="light"!=Je?10:-7,"#"+e.replace(/^#/,"").replace(/../g,(e=>("0"+Math.min(255,Math.max(0,parseInt(e,16)+t)).toString(16)).substr(-2))))},We=e=>{e.animate([{transform:"rotate(0deg)"},{transform:"rotate(360deg)"}],{duration:1e3,iterations:1})};let je=document.querySelector(".auth_Div"),Re=document.querySelector(".rewardsLink"),He=document.querySelector(".rewardsPage");[n,c].forEach((e=>{e.addEventListener("click",(()=>(_e.style.animation=" none",_e.style.backgroundImage="none","reset"===e.className?(Xe="reset",clearInterval(Ne),rt=60*ot,Pe(ot,0),void Oe()):(Xe="start",new Audio("./assets/sounds/tick.mp3").play(),clearInterval(Ne),void nt()))))}));let Ue=0;l.addEventListener("click",(()=>{Ue++,Xe=Ue%2==0?"resume":"pause","pause"==Xe?(()=>{rt!==60*ot&&0!==rt||$e(),Xe="pause",Ye=rt,clearInterval(Ne);const e=Math.floor(Ye/60);Pe(e,Ye%60)})():(rt!==60*ot&&0!==rt||$e(),Xe="pause",rt!=60*ot&&nt())})),y.addEventListener("mouseover",(()=>y.style.textDecoration="underline")),y.addEventListener("mouseout",(()=>y.style.textDecoration="none")),y.addEventListener("click",(()=>{[d,u,c,b,q,S,r,je,He].forEach((e=>e.style.display="none")),f.style.display="flex",j()}));const Ge=()=>{[d,u,c,r].forEach((e=>{e.style.display=""})),[f,b,q,S,je,He].forEach((e=>e.style.display="none")),j()};E.addEventListener("click",(()=>Ge())),C.addEventListener("click",(()=>([d,u,c,f,q,S,r,je,He].forEach((e=>{e.style.display="none"})),b.style.display="block",void j()))),v.addEventListener("click",(()=>([f,b,d,u,c,S,r,je,He].forEach((e=>{e.style.display="none"})),q.style.display="block",void j()))),k.addEventListener("click",(()=>([d,u,c,f,q,b,r,je,He].forEach((e=>{e.style.display="none"})),S.style.display="grid",void j()))),Re.addEventListener("click",(()=>([d,u,c,f,q,b,r,je,S].forEach((e=>{e.style.display="none"})),He.style.display="grid",void j()))),L.addEventListener("click",(()=>{ot++,Te(ot),Pe(ot,0)})),A.addEventListener("click",(()=>{ot>1&&(ot--,Te(ot),Pe(ot,0))})),I.addEventListener("click",(()=>{[x,w].forEach((e=>{e.style.backgroundColor="#36404c"})),ot=25,Te(ot),I.style.backgroundColor="#4a5460",et="default",ct()})),x.addEventListener("click",(()=>{[I,w].forEach((e=>{e.style.backgroundColor="#36404c"})),ot=5,Te(ot),x.style.backgroundColor="#4a5460",et="break",ct()})),w.addEventListener("click",(()=>{[x,I].forEach((e=>{e.style.backgroundColor="#36404c"})),ot=25,Te(ot),w.style.backgroundColor="#4a5460",et="automatic",alert("in progress!"),ct()})),F.addEventListener("click",(()=>Ge()));let Ke=document.querySelector(".navBarLinks");p.addEventListener("click",(()=>Ke.classList.toggle("show")));const Ve=(e,t,o)=>{const r=document.querySelector("."+e);r.setAttribute("title",t);const l=document.createElement("i");l.classList.add("fas",o,"fa-lg"),r.appendChild(l)};let Ye,Ne,Xe,Ze=0,Je="light",Qe="piano",et="default",tt=0;de.onAuthStateChanged((function(e){if(e){let t=ge(e.email);firebase.database().ref("users").child(t).on("value",(function(e){e.val().theme&&(Je=e.val().theme,"light"==Je?ce():ae()),e.val().sound&&(Qe=e.val().sound),e.val().cards&&(tt=e.val().cards),e.val().score&&(Ze=e.val().score),$(Ze),se.innerText=parseInt(`${Ze}`)+parseInt(2e3*`${tt}`),Me()}))}})),Ve("start","start","fa-play"),Ve("reset","reset","fa-redo"),Ve("pause","pause","fa-stop");let ot=25,rt=60*ot;const lt=()=>{0==rt&&(clearInterval(Ne),Fe(),"default"==et&&(Ze=parseInt(Ze),Ze+=10*ot,Me(),i.innerText=parseInt(`${Ze}`)+parseInt(2e3*`${tt}`),$(Ze),xe()));const e=Math.floor(rt/60),t=rt%60;0!==rt?(Pe(e,t),rt--,Oe()):Pe(e,t)},nt=()=>{null!=Xe&&(rt="pause"==Xe?Ye:60*ot),Ne=setInterval(lt,1e3)};a.addEventListener("click",(()=>{a.classList.toggle("ph-toggle-right"),H++,H%2!=0?ae():ce()}));const ct=()=>{document.querySelector(".current_Mode").textContent=`${et} mode`};ct(),i.innerText=parseInt(`${Ze}`)+parseInt(2e3*`${tt}`),$(Ze)}},t={};function o(r){if(t[r])return t[r].exports;var l=t[r]={exports:{}};return e[r](l,l.exports,o),l.exports}o.d=(e,t)=>{for(var r in t)o.o(t,r)&&!o.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o(147)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,